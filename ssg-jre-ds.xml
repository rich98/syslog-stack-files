<?xml version="1.0" encoding="UTF-8"?>
<ds:data-stream-collection xmlns:ds="http://scap.nist.gov/schema/scap/source/1.2" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:cat="urn:oasis:names:tc:entity:xmlns:xml:catalog" id="scap_org.open-scap_collection_from_xccdf_ssg-jre-xccdf-1.2.xml" schematron-version="1.2">
  <ds:data-stream id="scap_org.open-scap_datastream_from_xccdf_ssg-jre-xccdf-1.2.xml" scap-version="1.2" use-case="OTHER">
    <ds:dictionaries>
      <ds:component-ref id="scap_org.open-scap_cref_ssg-jre-cpe-dictionary.xml" xlink:href="#scap_org.open-scap_comp_ssg-jre-cpe-dictionary.xml">
        <cat:catalog>
          <cat:uri name="ssg-jre-cpe-oval.xml" uri="#scap_org.open-scap_cref_ssg-jre-cpe-oval.xml"/>
        </cat:catalog>
      </ds:component-ref>
    </ds:dictionaries>
    <ds:checklists>
      <ds:component-ref id="scap_org.open-scap_cref_ssg-jre-xccdf-1.2.xml" xlink:href="#scap_org.open-scap_comp_ssg-jre-xccdf-1.2.xml">
        <cat:catalog>
          <cat:uri name="ssg-jre-oval.xml" uri="#scap_org.open-scap_cref_ssg-jre-oval.xml"/>
          <cat:uri name="ssg-jre-ocil.xml" uri="#scap_org.open-scap_cref_ssg-jre-ocil.xml"/>
        </cat:catalog>
      </ds:component-ref>
    </ds:checklists>
    <ds:checks>
      <ds:component-ref id="scap_org.open-scap_cref_ssg-jre-oval.xml" xlink:href="#scap_org.open-scap_comp_ssg-jre-oval.xml"/>
      <ds:component-ref id="scap_org.open-scap_cref_ssg-jre-ocil.xml" xlink:href="#scap_org.open-scap_comp_ssg-jre-ocil.xml"/>
      <ds:component-ref id="scap_org.open-scap_cref_ssg-jre-cpe-oval.xml" xlink:href="#scap_org.open-scap_comp_ssg-jre-cpe-oval.xml"/>
    </ds:checks>
  </ds:data-stream>
  <ds:component id="scap_org.open-scap_comp_ssg-jre-oval.xml" timestamp="2017-06-29T18:43:51">
    <ns0:oval_definitions xmlns:ns0="http://oval.mitre.org/XMLSchema/oval-definitions-5" xmlns:ns2="http://oval.mitre.org/XMLSchema/oval-common-5" xmlns:ns3="http://oval.mitre.org/XMLSchema/oval-definitions-5#linux" xmlns:ns4="http://oval.mitre.org/XMLSchema/oval-definitions-5#unix" xmlns:ns5="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://oval.mitre.org/XMLSchema/oval-common-5 oval-common-schema.xsd         http://oval.mitre.org/XMLSchema/oval-definitions-5 oval-definitions-schema.xsd         http://oval.mitre.org/XMLSchema/oval-definitions-5#independent independent-definitions-schema.xsd         http://oval.mitre.org/XMLSchema/oval-definitions-5#unix unix-definitions-schema.xsd         http://oval.mitre.org/XMLSchema/oval-definitions-5#linux linux-definitions-schema.xsd">
      <ns0:generator>
        <ns2:product_name>python</ns2:product_name>
        <ns2:product_version>2.7.13</ns2:product_version>
        <ns2:schema_version>5.11</ns2:schema_version>
        <ns2:timestamp>2017-06-29T18:43:32</ns2:timestamp>
      </ns0:generator>
      <ns0:definitions>
        <ns0:definition class="inventory" id="oval:ssg-installed_app_is_java:def:1" version="1">
          <ns0:metadata>
            <ns0:title>Java Runtime Environment</ns0:title>
            <ns0:affected family="unix">
              <ns0:product>Java Runtime Environment (JRE)</ns0:product>
            </ns0:affected>
            <ns0:reference ref_id="installed_app_is_java" source="CPE"/>
            <ns0:description>The application installed on the system is Java.</ns0:description>
            <reference ref_id="installed_app_is_java" source="ssg"/>
          </ns0:metadata>
          <ns0:criteria operator="OR">
            <ns0:criterion comment="Oracle Java is installed" test_ref="oval:ssg-test_oracle_java:tst:1"/>
            <ns0:criterion comment="Oracle Java from Red Hat" test_ref="oval:ssg-test_oracle_java_rhel:tst:1"/>
            <ns0:criterion comment="IBM Java is installed" test_ref="oval:ssg-test_ibm_java:tst:1"/>
            <ns0:criterion comment="IBM Java from Red Hat" test_ref="oval:ssg-test_ibm_java_rhel:tst:1"/>
            <ns0:criterion comment="Sun Java from Red Hat" test_ref="oval:ssg-test_sun_java_rhel:tst:1"/>
            <ns0:criterion comment="OpenJDK is installed" test_ref="oval:ssg-test_openjdk_java:tst:1"/>
          </ns0:criteria>
        </ns0:definition>
        <ns0:definition class="compliance" id="oval:ssg-java_jre_deployment_config_exists:def:1" version="1">
          <ns0:metadata>
            <ns0:title>The Java Configuration File Exists</ns0:title>
            <ns0:affected family="unix">
              <ns0:product>Java Runtime Environment</ns0:product>
            </ns0:affected>
            <ns0:description>A configuration file must be present to deploy properties for JRE.</ns0:description>
            <reference ref_id="java_jre_deployment_config_exists" source="ssg"/>
          </ns0:metadata>
          <ns0:criteria>
            <ns0:criterion comment="Check deployment.config file" test_ref="oval:ssg-test_java_jre_deployment_config_exists:tst:1"/>
          </ns0:criteria>
        </ns0:definition>
        <ns0:definition class="compliance" id="oval:ssg-java_jre_deployment_config_mandatory:def:1" version="1">
          <ns0:metadata>
            <ns0:title>Configure The Java Deployment Mandatory Setting</ns0:title>
            <ns0:affected family="unix">
              <ns0:product>Java Runtime Environment</ns0:product>
            </ns0:affected>
            <ns0:description>The configuration file must contain proper keys and values to
      deploy settings correctly.</ns0:description>
            <reference ref_id="java_jre_deployment_config_mandatory" source="ssg"/>
          </ns0:metadata>
          <ns0:criteria>
            <ns0:criterion comment="Check deployment.system.config.mandatory" test_ref="oval:ssg-test_java_jre_deployment_system_config_mandatory:tst:1"/>
          </ns0:criteria>
        </ns0:definition>
        <ns0:definition class="compliance" id="oval:ssg-java_jre_deployment_config_properties:def:1" version="1">
          <ns0:metadata>
            <ns0:title>Configure the deployment.properties File Path</ns0:title>
            <ns0:affected family="unix">
              <ns0:product>Java Runtime Environment</ns0:product>
            </ns0:affected>
            <ns0:description>The configuration file must contain proper keys and values to
      deploy settings correctly.</ns0:description>
            <reference ref_id="java_jre_deployment_config_properties" source="ssg"/>
          </ns0:metadata>
          <ns0:criteria>
            <ns0:criterion comment="Check deployment.system.config" test_ref="oval:ssg-test_java_jre_deployment_system_config:tst:1"/>
          </ns0:criteria>
        </ns0:definition>
        <ns0:definition class="compliance" id="oval:ssg-java_jre_deployment_properties_exists:def:1" version="1">
          <ns0:metadata>
            <ns0:title>The Java Properties File Exists</ns0:title>
            <ns0:affected family="unix">
              <ns0:product>Java Runtime Environment</ns0:product>
            </ns0:affected>
            <ns0:description>A properties file must be present to hold all the keys
      that establish properties within the Java control panel.</ns0:description>
            <reference ref_id="java_jre_deployment_properties_exists" source="ssg"/>
          </ns0:metadata>
          <ns0:criteria>
            <ns0:criterion comment="Check deployment.properties file" test_ref="oval:ssg-test_java_jre_deployment_properties:tst:1"/>
          </ns0:criteria>
        </ns0:definition>
        <ns0:definition class="compliance" id="oval:ssg-java_jre_untrusted_sources:def:1" version="1">
          <ns0:metadata>
            <ns0:title>Disable Java Execution From Untrusted Sources</ns0:title>
            <ns0:affected family="unix">
              <ns0:product>Java Runtime Environment</ns0:product>
            </ns0:affected>
            <ns0:description>The dialog to enable users to grant permissions to execute
      signed content from an un-trusted authority must be disabled.</ns0:description>
            <reference ref_id="java_jre_untrusted_sources" source="ssg"/>
          </ns0:metadata>
          <ns0:criteria>
            <ns0:criterion comment="Check deployment.security.askgrantdialog.notinca" test_ref="oval:ssg-test_java_jre_untrusted_sources:tst:1"/>
          </ns0:criteria>
        </ns0:definition>
        <ns0:definition class="compliance" id="oval:ssg-java_jre_untrusted_sources_locked:def:1" version="1">
          <ns0:metadata>
            <ns0:title>Disable User Access to Untrusted Sources Setting</ns0:title>
            <ns0:affected family="unix">
              <ns0:product>Java Runtime Environment</ns0:product>
            </ns0:affected>
            <ns0:description>The dialog enabling users to grant permissions to execute signed
      content from an un-trusted authority must be locked.</ns0:description>
            <reference ref_id="java_jre_untrusted_sources_locked" source="ssg"/>
          </ns0:metadata>
          <ns0:criteria>
            <ns0:criterion comment="Check deployment.security.askgrantdialog.notinca.locked" test_ref="oval:ssg-test_java_jre_untrusted_sources_locked:tst:1"/>
          </ns0:criteria>
        </ns0:definition>
        <ns0:definition class="compliance" id="oval:ssg-java_jre_validation_crl:def:1" version="1">
          <ns0:metadata>
            <ns0:title>Enable Revocation Checks for Publisher Certificates</ns0:title>
            <ns0:affected family="unix">
              <ns0:product>Java Runtime Environment</ns0:product>
            </ns0:affected>
            <ns0:description>The setting for users to check publisher certificates
      for revocation must be enabled.</ns0:description>
            <reference ref_id="java_jre_validation_crl" source="ssg"/>
          </ns0:metadata>
          <ns0:criteria>
            <ns0:criterion comment="Check deployment.security.validation.crl" test_ref="oval:ssg-test_java_jre_validation_crl:tst:1"/>
          </ns0:criteria>
        </ns0:definition>
        <ns0:definition class="compliance" id="oval:ssg-java_jre_validation_crl_locked:def:1" version="1">
          <ns0:metadata>
            <ns0:title>Disable User Access to Revocation Check Settings</ns0:title>
            <ns0:affected family="unix">
              <ns0:product>Java Runtime Environment</ns0:product>
            </ns0:affected>
            <ns0:description>The setting enabling users to configure the check publisher
      certificates for revocation must be locked.</ns0:description>
            <reference ref_id="java_jre_validation_crl_locked" source="ssg"/>
          </ns0:metadata>
          <ns0:criteria>
            <ns0:criterion comment="Check deployment.security.validation.crl.locked" test_ref="oval:ssg-test_java_jre_validation_crl_locked:tst:1"/>
          </ns0:criteria>
        </ns0:definition>
        <ns0:definition class="compliance" id="oval:ssg-java_jre_validation_ocsp:def:1" version="1">
          <ns0:metadata>
            <ns0:title>Enable Online Certificate Validation</ns0:title>
            <ns0:affected family="unix">
              <ns0:product>Java Runtime Environment</ns0:product>
            </ns0:affected>
            <ns0:description>The option to enable online certificate validation
      must be enabled.</ns0:description>
            <reference ref_id="java_jre_validation_ocsp" source="ssg"/>
          </ns0:metadata>
          <ns0:criteria>
            <ns0:criterion comment="Check deployment.security.validation.ocsp" test_ref="oval:ssg-test_java_jre_validation_ocsp:tst:1"/>
          </ns0:criteria>
        </ns0:definition>
        <ns0:definition class="compliance" id="oval:ssg-java_jre_validation_ocsp_locked:def:1" version="1">
          <ns0:metadata>
            <ns0:title>Disable User Access to Online Certificate Validation Settings</ns0:title>
            <ns0:affected family="unix">
              <ns0:product>Java Runtime Environment</ns0:product>
            </ns0:affected>
            <ns0:description>The option to enable online certificate
      validation must be locked.</ns0:description>
            <reference ref_id="java_jre_validation_ocsp_locked" source="ssg"/>
          </ns0:metadata>
          <ns0:criteria>
            <ns0:criterion comment="Check deployment.security.validation.ocsp.locked" test_ref="oval:ssg-test_java_jre_validation_ocsp_locked:tst:1"/>
          </ns0:criteria>
        </ns0:definition>
      </ns0:definitions>
      <ns0:tests>
        <ns3:rpminfo_test check="all" check_existence="at_least_one_exists" comment="Oracle JRE is installed" id="oval:ssg-test_oracle_java:tst:1" version="1">
          <ns3:object object_ref="oval:ssg-obj_oracle_java:obj:1"/>
        </ns3:rpminfo_test>
        <ns3:rpminfo_test check="all" check_existence="at_least_one_exists" comment="Oracle JRE from Red Hat is installed" id="oval:ssg-test_oracle_java_rhel:tst:1" version="1">
          <ns3:object object_ref="oval:ssg-obj_oracle_java_rhel:obj:1"/>
        </ns3:rpminfo_test>
        <ns3:rpminfo_test check="all" check_existence="at_least_one_exists" comment="IBM JRE is installed" id="oval:ssg-test_ibm_java:tst:1" version="1">
          <ns3:object object_ref="oval:ssg-obj_ibm_java:obj:1"/>
          <ns3:state state_ref="oval:ssg-state_ibm_java:ste:1"/>
        </ns3:rpminfo_test>
        <ns3:rpminfo_test check="all" check_existence="at_least_one_exists" comment="IBM JRE from Red Hat is installed" id="oval:ssg-test_ibm_java_rhel:tst:1" version="1">
          <ns3:object object_ref="oval:ssg-obj_ibm_java_rhel:obj:1"/>
          <ns3:state state_ref="oval:ssg-state_ibm_java_rhel:ste:1"/>
        </ns3:rpminfo_test>
        <ns3:rpminfo_test check="all" check_existence="at_least_one_exists" comment="Sun JRE from Red Hat is installed" id="oval:ssg-test_sun_java_rhel:tst:1" version="1">
          <ns3:object object_ref="oval:ssg-obj_sun_java_rhel:obj:1"/>
        </ns3:rpminfo_test>
        <ns3:rpminfo_test check="all" check_existence="at_least_one_exists" comment="Red Hat OpenJDK is installed" id="oval:ssg-test_openjdk_java:tst:1" version="1">
          <ns3:object object_ref="oval:ssg-obj_openjdk_java:obj:1"/>
        </ns3:rpminfo_test>
        <ns4:file_test check="all" comment="Check deployment.config file" id="oval:ssg-test_java_jre_deployment_config_exists:tst:1" version="1">
          <ns4:object object_ref="oval:ssg-object_java_jre_deployment_config_exists:obj:1"/>
        </ns4:file_test>
        <ns5:textfilecontent54_test check="all" comment="Check deployment.system.config.mandatory" id="oval:ssg-test_java_jre_deployment_system_config_mandatory:tst:1" version="1">
          <ns5:object object_ref="oval:ssg-object_java_jre_deployment_system_config_mandatory:obj:1"/>
        </ns5:textfilecontent54_test>
        <ns5:textfilecontent54_test check="all" comment="Check deployment.system.config" id="oval:ssg-test_java_jre_deployment_system_config:tst:1" version="1">
          <ns5:object object_ref="oval:ssg-object_java_jre_deployment_system_config:obj:1"/>
        </ns5:textfilecontent54_test>
        <ns4:file_test check="all" comment="Check deployment.properties file" id="oval:ssg-test_java_jre_deployment_properties:tst:1" version="1">
          <ns4:object object_ref="oval:ssg-object_java_jre_deployment_properties:obj:1"/>
        </ns4:file_test>
        <ns5:textfilecontent54_test check="all" comment="Check deployment.security.askgrantdialog.notinca" id="oval:ssg-test_java_jre_untrusted_sources:tst:1" version="1">
          <ns5:object object_ref="oval:ssg-object_java_jre_untrusted_sources:obj:1"/>
        </ns5:textfilecontent54_test>
        <ns5:textfilecontent54_test check="all" comment="Check deployment.security.askgrantdialog.notinca.lock" id="oval:ssg-test_java_jre_untrusted_sources_locked:tst:1" version="1">
          <ns5:object object_ref="oval:ssg-object_java_jre_untrusted_sources_locked:obj:1"/>
        </ns5:textfilecontent54_test>
        <ns5:textfilecontent54_test check="all" comment="Check deployment.security.validation.crl" id="oval:ssg-test_java_jre_validation_crl:tst:1" version="1">
          <ns5:object object_ref="oval:ssg-object_java_jre_validation_crl:obj:1"/>
        </ns5:textfilecontent54_test>
        <ns5:textfilecontent54_test check="all" comment="Check deployment.security.validation.crl.locked" id="oval:ssg-test_java_jre_validation_crl_locked:tst:1" version="1">
          <ns5:object object_ref="oval:ssg-object_java_jre_validation_crl_locked:obj:1"/>
        </ns5:textfilecontent54_test>
        <ns5:textfilecontent54_test check="all" comment="Check deployment.security.validation.ocsp" id="oval:ssg-test_java_jre_validation_ocsp:tst:1" version="1">
          <ns5:object object_ref="oval:ssg-object_java_jre_validation_ocsp:obj:1"/>
        </ns5:textfilecontent54_test>
        <ns5:textfilecontent54_test check="all" comment="Check deployment.security.validation.ocsp.locked" id="oval:ssg-test_java_jre_validation_ocsp_locked:tst:1" version="1">
          <ns5:object object_ref="oval:ssg-object_java_jre_validation_ocsp_locked:obj:1"/>
        </ns5:textfilecontent54_test>
      </ns0:tests>
      <ns0:objects>
        <ns3:rpminfo_object id="oval:ssg-obj_oracle_java:obj:1" version="1">
          <ns3:name datatype="string" operation="pattern match">^jre.*$</ns3:name>
        </ns3:rpminfo_object>
        <ns3:rpminfo_object id="oval:ssg-obj_oracle_java_rhel:obj:1" version="1">
          <ns3:name datatype="string" operation="pattern match">^java.*oracle.*$</ns3:name>
        </ns3:rpminfo_object>
        <ns3:rpminfo_object id="oval:ssg-obj_ibm_java:obj:1" version="1">
          <ns3:name datatype="string" operation="pattern match">^ibm-java.*$</ns3:name>
        </ns3:rpminfo_object>
        <ns3:rpminfo_object id="oval:ssg-obj_ibm_java_rhel:obj:1" version="1">
          <ns3:name datatype="string" operation="pattern match">^java.*ibm.*$</ns3:name>
        </ns3:rpminfo_object>
        <ns3:rpminfo_object id="oval:ssg-obj_sun_java_rhel:obj:1" version="1">
          <ns3:name datatype="string" operation="pattern match">^java.*sun.*$</ns3:name>
        </ns3:rpminfo_object>
        <ns3:rpminfo_object id="oval:ssg-obj_openjdk_java:obj:1" version="1">
          <ns3:name datatype="string" operation="pattern match">^java.*openjdk.*$</ns3:name>
        </ns3:rpminfo_object>
        <ns4:file_object id="oval:ssg-object_java_jre_deployment_config_exists:obj:1" version="1">
          <ns4:filepath>/etc/.java/deployment/deployment.config</ns4:filepath>
        </ns4:file_object>
        <ns5:textfilecontent54_object id="oval:ssg-object_java_jre_deployment_system_config_mandatory:obj:1" version="1">
          <ns5:filepath>/etc/.java/deployment/deployment.config</ns5:filepath>
          <ns5:pattern operation="pattern match">^deployment.system.config.mandatory=false$</ns5:pattern>
          <ns5:instance datatype="int">1</ns5:instance>
        </ns5:textfilecontent54_object>
        <ns5:textfilecontent54_object id="oval:ssg-object_java_jre_deployment_system_config:obj:1" version="1">
          <ns5:filepath>/etc/.java/deployment/deployment.config</ns5:filepath>
          <ns5:pattern operation="pattern match">^deployment.system.config=file:///etc/.java/deployment/deployment.properties$</ns5:pattern>
          <ns5:instance datatype="int">1</ns5:instance>
        </ns5:textfilecontent54_object>
        <ns4:file_object id="oval:ssg-object_java_jre_deployment_properties:obj:1" version="1">
          <ns4:filepath>/etc/.java/deployment/deployment.properties</ns4:filepath>
        </ns4:file_object>
        <ns5:textfilecontent54_object id="oval:ssg-object_java_jre_untrusted_sources:obj:1" version="1">
          <ns5:filepath>/etc/.java/deployment/deployment.properties</ns5:filepath>
          <ns5:pattern operation="pattern match">^deployment.security.askgrantdialog.notinca=false$</ns5:pattern>
          <ns5:instance datatype="int">1</ns5:instance>
        </ns5:textfilecontent54_object>
        <ns5:textfilecontent54_object id="oval:ssg-object_java_jre_untrusted_sources_locked:obj:1" version="1">
          <ns5:filepath>/etc/.java/deployment/deployment.properties</ns5:filepath>
          <ns5:pattern operation="pattern match">^deployment.security.askgrantdialog.notinca.locked$</ns5:pattern>
          <ns5:instance datatype="int">1</ns5:instance>
        </ns5:textfilecontent54_object>
        <ns5:textfilecontent54_object id="oval:ssg-object_java_jre_validation_crl:obj:1" version="1">
          <ns5:filepath>/etc/.java/deployment/deployment.properties</ns5:filepath>
          <ns5:pattern operation="pattern match">^deployment.security.validation.crl=true$</ns5:pattern>
          <ns5:instance datatype="int">1</ns5:instance>
        </ns5:textfilecontent54_object>
        <ns5:textfilecontent54_object id="oval:ssg-object_java_jre_validation_crl_locked:obj:1" version="1">
          <ns5:filepath>/etc/.java/deployment/deployment.properties</ns5:filepath>
          <ns5:pattern operation="pattern match">^deployment.security.validation.crl.locked$</ns5:pattern>
          <ns5:instance datatype="int">1</ns5:instance>
        </ns5:textfilecontent54_object>
        <ns5:textfilecontent54_object id="oval:ssg-object_java_jre_validation_ocsp:obj:1" version="1">
          <ns5:filepath>/etc/.java/deployment/deployment.properties</ns5:filepath>
          <ns5:pattern operation="pattern match">^deployment.security.validation.ocsp=true$</ns5:pattern>
          <ns5:instance datatype="int">1</ns5:instance>
        </ns5:textfilecontent54_object>
        <ns5:textfilecontent54_object id="oval:ssg-object_java_jre_validation_ocsp_locked:obj:1" version="1">
          <ns5:filepath>/etc/.java/deployment/deployment.properties</ns5:filepath>
          <ns5:pattern operation="pattern match">^deployment.security.validation.ocsp.locked$</ns5:pattern>
          <ns5:instance datatype="int">1</ns5:instance>
        </ns5:textfilecontent54_object>
      </ns0:objects>
      <ns0:states>
        <ns3:rpminfo_state id="oval:ssg-state_ibm_java:ste:1" version="1">
          <ns3:evr datatype="evr_string" operation="greater than or equal">.*1.6.0.*</ns3:evr>
        </ns3:rpminfo_state>
        <ns3:rpminfo_state id="oval:ssg-state_ibm_java_rhel:ste:1" version="1">
          <ns3:evr datatype="evr_string" operation="greater than or equal">.*1.6.0.*</ns3:evr>
        </ns3:rpminfo_state>
      </ns0:states>
    </ns0:oval_definitions>
  </ds:component>
  <ds:component id="scap_org.open-scap_comp_ssg-jre-ocil.xml" timestamp="2017-06-29T18:43:49">
    <ns0:ocil xmlns:ns0="http://scap.nist.gov/schema/ocil/2.0">
      <ns0:generator>
        <ns0:schema_version>2.0</ns0:schema_version>
        <ns0:timestamp>2017-06-29T18:43:04Z</ns0:timestamp>
      </ns0:generator>
      <ns0:questionnaires>
        <ns0:questionnaire id="ocil:ssg-java_jre_deployment_config_exists_ocil:questionnaire:1">
          <ns0:title>The Java Configuration File Exists</ns0:title>
          <ns0:actions>
            <ns0:test_action_ref>ocil:ssg-java_jre_deployment_config_exists_action:testaction:1</ns0:test_action_ref>
          </ns0:actions>
        </ns0:questionnaire>
        <ns0:questionnaire id="ocil:ssg-java_jre_deployment_config_properties_ocil:questionnaire:1">
          <ns0:title>Configure the deployment.properties File Path</ns0:title>
          <ns0:actions>
            <ns0:test_action_ref>ocil:ssg-java_jre_deployment_config_properties_action:testaction:1</ns0:test_action_ref>
          </ns0:actions>
        </ns0:questionnaire>
        <ns0:questionnaire id="ocil:ssg-java_jre_deployment_config_mandatory_ocil:questionnaire:1">
          <ns0:title>Configure The Java Deployment Mandatory Setting</ns0:title>
          <ns0:actions>
            <ns0:test_action_ref>ocil:ssg-java_jre_deployment_config_mandatory_action:testaction:1</ns0:test_action_ref>
          </ns0:actions>
        </ns0:questionnaire>
        <ns0:questionnaire id="ocil:ssg-java_jre_deployment_properties_exists_ocil:questionnaire:1">
          <ns0:title>The Java Properties File Exists</ns0:title>
          <ns0:actions>
            <ns0:test_action_ref>ocil:ssg-java_jre_deployment_properties_exists_action:testaction:1</ns0:test_action_ref>
          </ns0:actions>
        </ns0:questionnaire>
        <ns0:questionnaire id="ocil:ssg-java_jre_untrusted_sources_ocil:questionnaire:1">
          <ns0:title>Disable Java Execution From Untrusted Sources</ns0:title>
          <ns0:actions>
            <ns0:test_action_ref>ocil:ssg-java_jre_untrusted_sources_action:testaction:1</ns0:test_action_ref>
          </ns0:actions>
        </ns0:questionnaire>
        <ns0:questionnaire id="ocil:ssg-java_jre_untrusted_sources_locked_ocil:questionnaire:1">
          <ns0:title>Disable User Access to Untrusted Sources Settings</ns0:title>
          <ns0:actions>
            <ns0:test_action_ref>ocil:ssg-java_jre_untrusted_sources_locked_action:testaction:1</ns0:test_action_ref>
          </ns0:actions>
        </ns0:questionnaire>
        <ns0:questionnaire id="ocil:ssg-java_jre_validation_crl_ocil:questionnaire:1">
          <ns0:title>Enable Revocation Checks for Publisher Certificates</ns0:title>
          <ns0:actions>
            <ns0:test_action_ref>ocil:ssg-java_jre_validation_crl_action:testaction:1</ns0:test_action_ref>
          </ns0:actions>
        </ns0:questionnaire>
        <ns0:questionnaire id="ocil:ssg-java_jre_validation_crl_locked_ocil:questionnaire:1">
          <ns0:title>Disable User Access to Revocation Check Settings</ns0:title>
          <ns0:actions>
            <ns0:test_action_ref>ocil:ssg-java_jre_validation_crl_locked_action:testaction:1</ns0:test_action_ref>
          </ns0:actions>
        </ns0:questionnaire>
        <ns0:questionnaire id="ocil:ssg-java_jre_validation_ocsp_ocil:questionnaire:1">
          <ns0:title>Enable Online Certificate Validation</ns0:title>
          <ns0:actions>
            <ns0:test_action_ref>ocil:ssg-java_jre_validation_ocsp_action:testaction:1</ns0:test_action_ref>
          </ns0:actions>
        </ns0:questionnaire>
        <ns0:questionnaire id="ocil:ssg-java_jre_validation_ocsp_locked_ocil:questionnaire:1">
          <ns0:title>Disable User Access to Online Certificate Validation Settings</ns0:title>
          <ns0:actions>
            <ns0:test_action_ref>ocil:ssg-java_jre_validation_ocsp_locked_action:testaction:1</ns0:test_action_ref>
          </ns0:actions>
        </ns0:questionnaire>
        <ns0:questionnaire id="ocil:ssg-java_jre_updated_ocil:questionnaire:1">
          <ns0:title>Ensure Java Patches Installed</ns0:title>
          <ns0:actions>
            <ns0:test_action_ref>ocil:ssg-java_jre_updated_action:testaction:1</ns0:test_action_ref>
          </ns0:actions>
        </ns0:questionnaire>
      </ns0:questionnaires>
      <ns0:test_actions>
        <ns0:boolean_question_test_action id="ocil:ssg-java_jre_deployment_config_exists_action:testaction:1" question_ref="ocil:ssg-java_jre_deployment_config_exists_question:question:1">
          <ns0:when_true>
            <ns0:result>PASS</ns0:result>
          </ns0:when_true>
          <ns0:when_false>
            <ns0:result>FAIL</ns0:result>
          </ns0:when_false>
        </ns0:boolean_question_test_action>
        <ns0:boolean_question_test_action id="ocil:ssg-java_jre_deployment_config_properties_action:testaction:1" question_ref="ocil:ssg-java_jre_deployment_config_properties_question:question:1">
          <ns0:when_true>
            <ns0:result>PASS</ns0:result>
          </ns0:when_true>
          <ns0:when_false>
            <ns0:result>FAIL</ns0:result>
          </ns0:when_false>
        </ns0:boolean_question_test_action>
        <ns0:boolean_question_test_action id="ocil:ssg-java_jre_deployment_config_mandatory_action:testaction:1" question_ref="ocil:ssg-java_jre_deployment_config_mandatory_question:question:1">
          <ns0:when_true>
            <ns0:result>PASS</ns0:result>
          </ns0:when_true>
          <ns0:when_false>
            <ns0:result>FAIL</ns0:result>
          </ns0:when_false>
        </ns0:boolean_question_test_action>
        <ns0:boolean_question_test_action id="ocil:ssg-java_jre_deployment_properties_exists_action:testaction:1" question_ref="ocil:ssg-java_jre_deployment_properties_exists_question:question:1">
          <ns0:when_true>
            <ns0:result>PASS</ns0:result>
          </ns0:when_true>
          <ns0:when_false>
            <ns0:result>FAIL</ns0:result>
          </ns0:when_false>
        </ns0:boolean_question_test_action>
        <ns0:boolean_question_test_action id="ocil:ssg-java_jre_untrusted_sources_action:testaction:1" question_ref="ocil:ssg-java_jre_untrusted_sources_question:question:1">
          <ns0:when_true>
            <ns0:result>PASS</ns0:result>
          </ns0:when_true>
          <ns0:when_false>
            <ns0:result>FAIL</ns0:result>
          </ns0:when_false>
        </ns0:boolean_question_test_action>
        <ns0:boolean_question_test_action id="ocil:ssg-java_jre_untrusted_sources_locked_action:testaction:1" question_ref="ocil:ssg-java_jre_untrusted_sources_locked_question:question:1">
          <ns0:when_true>
            <ns0:result>PASS</ns0:result>
          </ns0:when_true>
          <ns0:when_false>
            <ns0:result>FAIL</ns0:result>
          </ns0:when_false>
        </ns0:boolean_question_test_action>
        <ns0:boolean_question_test_action id="ocil:ssg-java_jre_validation_crl_action:testaction:1" question_ref="ocil:ssg-java_jre_validation_crl_question:question:1">
          <ns0:when_true>
            <ns0:result>PASS</ns0:result>
          </ns0:when_true>
          <ns0:when_false>
            <ns0:result>FAIL</ns0:result>
          </ns0:when_false>
        </ns0:boolean_question_test_action>
        <ns0:boolean_question_test_action id="ocil:ssg-java_jre_validation_crl_locked_action:testaction:1" question_ref="ocil:ssg-java_jre_validation_crl_locked_question:question:1">
          <ns0:when_true>
            <ns0:result>PASS</ns0:result>
          </ns0:when_true>
          <ns0:when_false>
            <ns0:result>FAIL</ns0:result>
          </ns0:when_false>
        </ns0:boolean_question_test_action>
        <ns0:boolean_question_test_action id="ocil:ssg-java_jre_validation_ocsp_action:testaction:1" question_ref="ocil:ssg-java_jre_validation_ocsp_question:question:1">
          <ns0:when_true>
            <ns0:result>PASS</ns0:result>
          </ns0:when_true>
          <ns0:when_false>
            <ns0:result>FAIL</ns0:result>
          </ns0:when_false>
        </ns0:boolean_question_test_action>
        <ns0:boolean_question_test_action id="ocil:ssg-java_jre_validation_ocsp_locked_action:testaction:1" question_ref="ocil:ssg-java_jre_validation_ocsp_locked_question:question:1">
          <ns0:when_true>
            <ns0:result>PASS</ns0:result>
          </ns0:when_true>
          <ns0:when_false>
            <ns0:result>FAIL</ns0:result>
          </ns0:when_false>
        </ns0:boolean_question_test_action>
        <ns0:boolean_question_test_action id="ocil:ssg-java_jre_updated_action:testaction:1" question_ref="ocil:ssg-java_jre_updated_question:question:1">
          <ns0:when_true>
            <ns0:result>PASS</ns0:result>
          </ns0:when_true>
          <ns0:when_false>
            <ns0:result>FAIL</ns0:result>
          </ns0:when_false>
        </ns0:boolean_question_test_action>
      </ns0:test_actions>
      <ns0:questions>
        <ns0:boolean_question id="ocil:ssg-java_jre_deployment_config_exists_question:question:1">
          <ns0:question_text>
To verify that the deployment.config file exists,
run the following command:
$ ls /etc/.java/deployment
The output should contain:
deployment.config

			Is it the case that it does not exist?
			</ns0:question_text>
        </ns0:boolean_question>
        <ns0:boolean_question id="ocil:ssg-java_jre_deployment_config_properties_question:question:1">
          <ns0:question_text>
To verify that deployment.config is configured properly,
run the following command:
$ grep 'deployment.system.config=file' /etc/.java/deployment/deployment.config
If properly configured, the output should return:
deployment.system.config=file:///etc/.java/deployment/deployment.properties

			Is it the case that it is not configured?
			</ns0:question_text>
        </ns0:boolean_question>
        <ns0:boolean_question id="ocil:ssg-java_jre_deployment_config_mandatory_question:question:1">
          <ns0:question_text>
To verify that deployment.config is configured properly,
run the following command:
$ grep 'deployment.system.config.mandatory' /etc/.java/deployment/deployment.config
If properly configured, the output should return:
deployment.system.config.mandatory=false

			Is it the case that it is not configured?
			</ns0:question_text>
        </ns0:boolean_question>
        <ns0:boolean_question id="ocil:ssg-java_jre_deployment_properties_exists_question:question:1">
          <ns0:question_text>
To verify that the deployment.properties file exists,
run the following command:
$ ls /etc/.java/deployment
The output should contain:
deployment.properties

			Is it the case that it does not exist?
			</ns0:question_text>
        </ns0:boolean_question>
        <ns0:boolean_question id="ocil:ssg-java_jre_untrusted_sources_question:question:1">
          <ns0:question_text>
To verify that Java cannot execute from untrusted sources,
run the following command:
$ grep 'askgrantdialog.notinca=false' /etc/.java/deployment/deployment.properties
If properly configured, the output should return:
deployment.security.askgrantdialog.notinca=false

			Is it the case that it does not exist or is not configured properly?
			</ns0:question_text>
        </ns0:boolean_question>
        <ns0:boolean_question id="ocil:ssg-java_jre_untrusted_sources_locked_question:question:1">
          <ns0:question_text>
To verify that users cannot change the untrusted sources settings,
run the following command:
$ grep 'askgrantdialog.notinca.locked' /etc/.java/deployment/deployment.properties
If properly configured, the output should return:
deployment.security.askgrantdialog.notinca.locked

			Is it the case that it does not exist or is not configured properly?
			</ns0:question_text>
        </ns0:boolean_question>
        <ns0:boolean_question id="ocil:ssg-java_jre_validation_crl_question:question:1">
          <ns0:question_text>
To verify that revocation checks are enabled, run the following command:
$ grep 'validation.crl=true' /etc/.java/deployment/deployment.properties
If properly configured, the output should return:
deployment.security.validation.crl=true

			Is it the case that it does not exist or is not configured properly?
			</ns0:question_text>
        </ns0:boolean_question>
        <ns0:boolean_question id="ocil:ssg-java_jre_validation_crl_locked_question:question:1">
          <ns0:question_text>
To verify that users cannot change revocation check settings,
run the following command:
$ grep 'validation.crl.locked' /etc/.java/deployment/deployment.properties
If properly configured, the output should return:
deployment.security.validation.crl.locked

			Is it the case that it does not exist or is not configured properly?
			</ns0:question_text>
        </ns0:boolean_question>
        <ns0:boolean_question id="ocil:ssg-java_jre_validation_ocsp_question:question:1">
          <ns0:question_text>
To verify that online certificate verification is enabled,
run the following command:
$ grep 'validation.ocsp=true' /etc/.java/deployment/deployment.properties
If properly configured, the output should return:
deployment.security.validation.ocsp=true

			Is it the case that it does not exist or is not configured properly?
			</ns0:question_text>
        </ns0:boolean_question>
        <ns0:boolean_question id="ocil:ssg-java_jre_validation_ocsp_locked_question:question:1">
          <ns0:question_text>
To verify that users cannot change online certificate verification,
run the following command:
$ grep 'validation.ocsp.locked' /etc/.java/deployment/deployment.properties
If properly configured, the output should return:
deployment.security.validation.ocsp.locked

			Is it the case that it does not exist or is not configured properly?
			</ns0:question_text>
        </ns0:boolean_question>
        <ns0:boolean_question id="ocil:ssg-java_jre_updated_question:question:1">
          <ns0:question_text>
If the system is joined to the Red Hat Network, a Red Hat Satellite Server, or
a yum server which provides updates, invoking the following command will
indicate if updates are available:
$ sudo yum check-update
If the system is not configured to update from one of these sources,
run the following command to list when each package was last updated:
$ rpm -qa -last
Compare this to Red Hat Security Advisories (RHSA) listed at
https://access.redhat.com/security/updates/active/https://access.redhat.com/security/updates/active/
to determine if the system is missing applicable updates.

			Is it the case that it is not updated?
			</ns0:question_text>
        </ns0:boolean_question>
      </ns0:questions>
    </ns0:ocil>
  </ds:component>
  <ds:component id="scap_org.open-scap_comp_ssg-jre-xccdf-1.2.xml" timestamp="2017-06-29T18:43:52">
    <Benchmark xmlns="http://checklists.nist.gov/xccdf/1.2" id="xccdf_org.ssgproject.content_benchmark_JRE" resolved="1" xml:lang="en-US" style="SCAP_1.2">
      <status date="2017-06-29">draft</status>
      <title xml:lang="en-US">Guide to the Secure Configuration of Java Runtime Environment</title>
      <description xml:lang="en-US">This guide presents a catalog of security-relevant
configuration settings for Java Runtime Environment. It is a rendering of
content structured in the eXtensible Configuration Checklist Description Format (XCCDF)
in order to support security automation.  The SCAP content is
is available in the <html:code xmlns:html="http://www.w3.org/1999/xhtml">scap-security-guide</html:code> package which is developed at
<html:a xmlns:html="http://www.w3.org/1999/xhtml" href="https://www.open-scap.org/security-policies/scap-security-guide">https://www.open-scap.org/security-policies/scap-security-guide</html:a>.
<html:br xmlns:html="http://www.w3.org/1999/xhtml"/>
<html:br xmlns:html="http://www.w3.org/1999/xhtml"/>
Providing system administrators with such guidance informs them how to securely
configure systems under their control in a variety of network roles. Policy
makers and baseline creators can use this catalog of settings, with its
associated references to higher-level security control catalogs, in order to
assist them in security baseline creation. This guide is a <html:i xmlns:html="http://www.w3.org/1999/xhtml">catalog, not a
checklist,</html:i> and satisfaction of every item is not likely to be possible or
sensible in many operational scenarios. However, the XCCDF format enables
granular selection and adjustment of settings, and their association with OVAL
and OCIL content provides an automated checking capability. Transformations of
this document, and its associated automated checking content, are capable of
providing baselines that meet a diverse set of policy objectives. Some example
XCCDF <html:i xmlns:html="http://www.w3.org/1999/xhtml">Profiles</html:i>, which are selections of items that form checklists and
can be used as baselines, are available with this guide. They can be
processed, in an automated fashion, with tools that support the Security
Content Automation Protocol (SCAP). The DISA STIG for Java Runtime Environment,
which provides required settings for US Department of Defense systems, is
one example of a baseline created from this guidance.
</description>
      <notice xml:lang="en-US" id="terms_of_use">Do not attempt to implement any of the settings in
this guide without first testing them in a non-operational environment. The
creators of this guidance assume no responsibility whatsoever for its use by
other parties, and makes no guarantees, expressed or implied, about its
quality, reliability, or any other characteristic.</notice>
      <front-matter xml:lang="en-US">
        <html:p xmlns:html="http://www.w3.org/1999/xhtml" xmlns:ns2="http://www.w3.org/2000/svg">
          <ns2:svg enable-background="new 30 100 330 150" height="140px" id="Layer_1" version="1.1" viewBox="30 100 330 150" width="350px" x="0px" y="0px" xml:space="preserve">
        <ns2:g fill="#3A3B3B">
          <ns2:path d="m197.1 150.3s-10.1-1.2-14.4-1.2c-7.2 0-11.0 2.6-11.0 8.3 0 6.6 3.5 7.7 12.3 9.6 10.1 2.3 14.5 4.7 14.5 13.6 0 11.2-6.1 15.6-16.1 15.6-6.0 0-16.0-1.6-16.0-1.6l0.6-4.7s9.9 1.3 15.1 1.3c7.2 0 10.8-3.1 10.8-10.2 0-5.7-3.0-7.3-11.2-8.9-10.4-2.3-15.7-4.7-15.7-14.4 0-9.8 6.4-13.6 16.3-13.6 6.0 0 15.3 1.5 15.3 1.5l-0.5 4.8z"/>
          <ns2:path d="m238.7 194.6c-3.6 0.7-9.1 1.5-13.9 1.5-15.1 0-18.5-9.2-18.5-25.9 0-17.1 3.3-26.1 18.5-26.1 5.2 0 10.7 1.0 13.9 1.6l-0.2 4.7c-3.3-0.6-9.2-1.3-13.1-1.3-11.2 0-13.2 6.7-13.2 21.1 0 14.1 1.8 20.8 13.4 20.8 4.1 0 9.5-0.7 13.0-1.3l0.2 4.8z"/>
          <ns2:path d="m257.5 144.9h12.3l13.9 50.5h-5.6l-3.7-13.0h-21.6l-3.7 13.0h-5.5l13.9-50.5zm-3.4 32.5h19.1l-7.7-27.7h-3.8l-7.7 27.7z"/>
          <ns2:path d="m297.2 178.4v17.0h-5.6v-50.5h18.5c11.0 0 16.1 5.3 16.1 16.3 0 11.0-5.1 17.2-16.1 17.2h-12.9zm12.8-5.0c7.4 0 10.4-4.5 10.4-12.3 0-7.7-3.1-11.3-10.4-11.3h-12.8v23.6h12.8z"/>
        </ns2:g>
        <ns2:g fill="#676767">
          <ns2:path d="m176.8 211.2s-2.8-0.3-4.0-0.3c-1.5 0-2.2 0.5-2.2 1.4 0 0.9 0.5 1.2 2.8 1.9 2.9 0.9 3.8 1.8 3.8 4.0 0 3.0-2.0 4.3-4.7 4.3-1.9 0-4.5-0.6-4.5-0.6l0.3-2.1s2.7 0.4 4.1 0.4c1.5 0 2.1-0.7 2.1-1.8 0-0.8-0.5-1.2-2.4-1.8-3.1-0.9-4.2-1.9-4.2-4.1 0-2.8 1.9-4.0 4.6-4.0 1.8 0 4.5 0.5 4.5 0.5l-0.2 2.2z"/>
          <ns2:path d="m180.6 208.7h8.8v2.4h-6.0v3.2h4.8v2.4h-4.9v3.3h6.0v2.4h-8.8v-13.6z"/>
          <ns2:path d="m201.2 222.1c-0.9 0.2-2.7 0.5-4.0 0.5-4.2 0-5.2-2.3-5.2-7.0 0-5.2 1.2-7.0 5.2-7.0 1.4 0 3.1 0.3 4.0 0.5l-0.1 2.2c-0.9-0.1-2.6-0.3-3.5-0.3-2.1 0-2.8 0.7-2.8 4.6 0 3.7 0.5 4.6 2.8 4.6 0.9 0 2.6-0.2 3.4-0.3l0.1 2.3z"/>
          <ns2:path d="m209.5 220.2c1.6 0 2.4-0.8 2.4-2.4v-9.1h2.8v9.0c0 3.4-1.8 4.8-5.2 4.8-3.4 0-5.2-1.4-5.2-4.8v-9.0h2.8v9.1c0 1.6 0.8 2.4 2.4 2.4z"/>
          <ns2:path d="m221.3 217.8v4.6h-2.8v-13.6h5.3c3.1 0 4.8 1.4 4.8 4.5 0 1.9-0.8 3.1-2.0 3.9l1.9 5.2h-3.0l-1.6-4.6h-2.7zm2.5-6.7h-2.5v4.3h2.6c1.4 0 1.9-1.0 1.9-2.2 0-1.3-0.7-2.2-2.0-2.2z"/>
          <ns2:path d="m231.9 208.7h2.8v13.6h-2.8v-13.6z"/>
          <ns2:path d="m237.4 208.7h10.0v2.4h-3.6v11.2h-2.8v-11.2h-3.6v-2.4z"/>
          <ns2:path d="m255.7 222.3h-2.8v-5.5l-4.2-8.1h3.1l2.5 5.4 2.5-5.4h3.1l-4.2 8.1v5.5z"/>
          <ns2:path d="m273.4 215.1h4.0v7.1s-2.9 0.5-4.6 0.5c-4.4 0-5.6-2.5-5.6-7.0 0-5.0 1.4-7.0 5.5-7.0 2.1 0 4.7 0.6 4.7 0.6l-0.1 2.1s-2.4-0.3-4.2-0.3c-2.4 0-3.1 0.8-3.1 4.6 0 3.6 0.5 4.6 3.0 4.6 0.8 0 1.7-0.1 1.7-0.1v-2.6h-1.2v-2.4z"/>
          <ns2:path d="m286 220.2c1.6 0 2.4-0.8 2.4-2.4v-9.1h2.8v9.0c0 3.4-1.8 4.8-5.2 4.8s-5.2-1.4-5.2-4.8v-9.0h2.8v9.1c0 1.6 0.8 2.4 2.4 2.4z"/>
          <ns2:path d="m295.0 208.7h2.8v13.6h-2.8v-13.6z"/>
          <ns2:path d="m301.8 222.3v-13.6h4.6c4.7 0 5.8 2.0 5.6 6.5 0 4.6-0.9 7.1-5.8 7.1h-4.6zm4.6-11.2h-1.8v8.8h1.8c2.7 0 2.9-1.6 2.9-4.7 0-3.0-0.3-4.1-3.0-4.1z"/>
          <ns2:path d="m315.5 208.7h8.8v2.4h-6.0v3.2h4.8v2.4h-4.8v3.3h6.0v2.4h-8.8v-13.6z"/>
        </ns2:g>
        <ns2:path d="m116.0 204.9h-2.8c-1.5 0-2.8 1.2-2.8 2.7v19.2c0 1.5 1.3 2.7 2.8 2.7h27.9c1.5 0 2.8-1.2 2.8-2.7v-19.2c0-1.5-1.3-2.7-2.8-2.7h-2.8v-8.2c0-6.1-5.0-11.0-11.2-11.0-6.2 0-11.2 4.9-11.2 11.0v8.2zm5.6-8.2c0-3.0 2.5-5.5 5.6-5.4 3.1 0 5.6 2.4 5.6 5.5v8.2h-11.2v-8.2z" fill="#6D0B2B"/>
        <ns2:g fill="#AD1D3F">
          <ns2:path d="m106.4 214.7c-16.4 11.4-37.5 7.8-50.0-3.4l11.9-11.7c2.3-1.9 3.4-5.4 1.2-8.8-0.1-0.1-6.7-11.0 2.3-19.8 7.3-7.2 17.8-5.8 23.3-0.3 3.2 3.1 4.9 7.1 4.9 11.4v0.1c0 4.3-1.8 8.5-5.1 11.7-4.0 3.9-9.6 5.4-15.4 4.1-2.1-0.5-4.3 0.8-4.8 2.9-0.5 2.1 0.8 4.2 2.9 4.7 8.4 2.0 16.9-0.3 22.8-6.1 4.9-4.8 7.5-10.9 7.4-17.4-0.0-6.3-2.6-12.3-7.3-16.8-8.2-8.1-23.8-10.3-34.5 0.3-10.7 10.5-6.6 23.8-3.7 28.8l-12.8 12.6c-2.9 2.9-2.3 6.6-0.2 8.7 15.4 15.2 38.7 17.9 56.9 8.2l-0.0-9.1z"/>
          <ns2:path d="m43.9 188.4c-1.1-7.5-1.1-21.8 11.2-33.9 8.0-7.9 18.5-12.0 29.5-11.7 10.2 0.3 20.1 4.5 27.1 11.4 7.6 7.4 11.8 17.3 11.9 27.8v0.1c1.16-0.3 2.4-0.4 3.6-0.4 1.5 0 2.9 0.2 4.3 0.6 0-0.1 0.0-0.2 0.0-0.3-0.1-12.5-5.2-24.3-14.2-33.2-8.4-8.3-20.2-13.3-32.4-13.7-13.2-0.5-25.8 4.5-35.4 14.0-9.1 8.9-14.0 20.8-14.0 33.3 0 2.4 0.2 4.8 0.5 7.2 0.6 4.0 1.8 8.1 3.7 12.2 0.9 2.0 3.2 2.8 5.2 1.9 2.0-0.9 2.9-3.1 2.0-5.1-1.5-3.3-2.6-6.8-3.1-10.1z"/>
        </ns2:g>
        <ns2:circle cx="127.26" cy="218.49" fill="#fff" r="3.233"/>
      </ns2:svg>
        </html:p>
      </front-matter>
      <rear-matter xml:lang="en-US">Red Hat and Red Hat Enterprise Linux are either registered
trademarks or trademarks of Red Hat, Inc. in the United States and other
countries. All other names are registered trademarks or trademarks of their
respective companies.</rear-matter>
      <platform idref="cpe:/a:oracle:jre:"/>
      <platform idref="cpe:/a:sun:jre:"/>
      <platform idref="cpe:/a:redhat:openjdk:"/>
      <platform idref="cpe:/a:ibm:jre:"/>
      <version update="https://github.com/OpenSCAP/scap-security-guide/releases/latest">0.1.34</version>
      <metadata>
        <dc:publisher xmlns:dc="http://purl.org/dc/elements/1.1/">SCAP Security Guide Project</dc:publisher>
        <dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">SCAP Security Guide Project</dc:creator>
        <dc:contributor xmlns:dc="http://purl.org/dc/elements/1.1/">Frank J Cameron (CAM1244) &lt;cameron@ctc.com&gt;</dc:contributor>
        <dc:contributor xmlns:dc="http://purl.org/dc/elements/1.1/">0x66656c6978 &lt;0x66656c6978@users.noreply.github.com&gt;</dc:contributor>
        <dc:contributor xmlns:dc="http://purl.org/dc/elements/1.1/">Gabe Alford &lt;redhatrises@gmail.com&gt;</dc:contributor>
        <dc:contributor xmlns:dc="http://purl.org/dc/elements/1.1/">Christopher Anderson &lt;cba@fedoraproject.org&gt;</dc:contributor>
        <dc:contributor xmlns:dc="http://purl.org/dc/elements/1.1/">Chuck Atkins &lt;chuck.atkins@kitware.com&gt;</dc:contributor>
        <dc:contributor xmlns:dc="http://purl.org/dc/elements/1.1/">Molly Jo Bault &lt;Molly.Jo.Bault@ballardtech.com&gt;</dc:contributor>
        <dc:contributor xmlns:dc="http://purl.org/dc/elements/1.1/">Joseph Bisch &lt;joseph.bisch@gmail.com&gt;</dc:contributor>
        <dc:contributor xmlns:dc="http://purl.org/dc/elements/1.1/">Jeffrey Blank &lt;blank@eclipse.ncsc.mil&gt;</dc:contributor>
        <dc:contributor xmlns:dc="http://purl.org/dc/elements/1.1/">Blake Burkhart &lt;blake.burkhart@us.af.mil&gt;</dc:contributor>
        <dc:contributor xmlns:dc="http://purl.org/dc/elements/1.1/">Patrick Callahan &lt;pmc@patrickcallahan.com&gt;</dc:contributor>
        <dc:contributor xmlns:dc="http://purl.org/dc/elements/1.1/">Nick Carboni &lt;ncarboni@redhat.com&gt;</dc:contributor>
        <dc:contributor xmlns:dc="http://purl.org/dc/elements/1.1/">Frank Caviggia &lt;fcaviggi@ra.iad.redhat.com&gt;</dc:contributor>
        <dc:contributor xmlns:dc="http://purl.org/dc/elements/1.1/">Eric Christensen &lt;echriste@redhat.com&gt;</dc:contributor>
        <dc:contributor xmlns:dc="http://purl.org/dc/elements/1.1/">Caleb Cooper &lt;coopercd@ornl.gov&gt;</dc:contributor>
        <dc:contributor xmlns:dc="http://purl.org/dc/elements/1.1/">Maura Dailey &lt;maura@eclipse.ncsc.mil&gt;</dc:contributor>
        <dc:contributor xmlns:dc="http://purl.org/dc/elements/1.1/">Klaas Demter &lt;demter@atix.de&gt;</dc:contributor>
        <dc:contributor xmlns:dc="http://purl.org/dc/elements/1.1/">Jean-Baptiste Donnette &lt;jean-baptiste.donnette@epita.fr&gt;</dc:contributor>
        <dc:contributor xmlns:dc="http://purl.org/dc/elements/1.1/">drax &lt;applezip@gmail.com&gt;</dc:contributor>
        <dc:contributor xmlns:dc="http://purl.org/dc/elements/1.1/">Greg Elin &lt;gregelin@gitmachines.com&gt;</dc:contributor>
        <dc:contributor xmlns:dc="http://purl.org/dc/elements/1.1/">Andrew Gilmore &lt;agilmore2@gmail.com&gt;</dc:contributor>
        <dc:contributor xmlns:dc="http://purl.org/dc/elements/1.1/">Joshua Glemza &lt;jglemza@nasa.gov&gt;</dc:contributor>
        <dc:contributor xmlns:dc="http://purl.org/dc/elements/1.1/">Steve Grubb &lt;sgrubb@redhat.com&gt;</dc:contributor>
        <dc:contributor xmlns:dc="http://purl.org/dc/elements/1.1/">Marek Haicman &lt;mhaicman@redhat.com&gt;</dc:contributor>
        <dc:contributor xmlns:dc="http://purl.org/dc/elements/1.1/">Trey Henefield &lt;thenefield@gmail.com&gt;</dc:contributor>
        <dc:contributor xmlns:dc="http://purl.org/dc/elements/1.1/">hex2a &lt;hex2a@users.noreply.github.com&gt;</dc:contributor>
        <dc:contributor xmlns:dc="http://purl.org/dc/elements/1.1/">Robin Price II &lt;robin@redhat.com&gt;</dc:contributor>
        <dc:contributor xmlns:dc="http://purl.org/dc/elements/1.1/">Jeremiah Jahn &lt;jeremiah@goodinassociates.com&gt;</dc:contributor>
        <dc:contributor xmlns:dc="http://purl.org/dc/elements/1.1/">Stephan Joerrens &lt;Stephan.Joerrens@fiduciagad.de&gt;</dc:contributor>
        <dc:contributor xmlns:dc="http://purl.org/dc/elements/1.1/">Yuli Khodorkovskiy &lt;ykhodorkovskiy@tresys.com&gt;</dc:contributor>
        <dc:contributor xmlns:dc="http://purl.org/dc/elements/1.1/">Luke Kordell &lt;luke.t.kordell@lmco.com&gt;</dc:contributor>
        <dc:contributor xmlns:dc="http://purl.org/dc/elements/1.1/">kspargur &lt;kspargur@kspargur.csb&gt;</dc:contributor>
        <dc:contributor xmlns:dc="http://purl.org/dc/elements/1.1/">Fen Labalme &lt;fen@civicactions.com&gt;</dc:contributor>
        <dc:contributor xmlns:dc="http://purl.org/dc/elements/1.1/">Ian Lee &lt;lee1001@llnl.gov&gt;</dc:contributor>
        <dc:contributor xmlns:dc="http://purl.org/dc/elements/1.1/">Jan Lieskovsky &lt;jlieskov@redhat.com&gt;</dc:contributor>
        <dc:contributor xmlns:dc="http://purl.org/dc/elements/1.1/">Šimon Lukašík &lt;slukasik@redhat.com&gt;</dc:contributor>
        <dc:contributor xmlns:dc="http://purl.org/dc/elements/1.1/">Jamie Lorwey Martin &lt;jlmartin@redhat.com&gt;</dc:contributor>
        <dc:contributor xmlns:dc="http://purl.org/dc/elements/1.1/">Michael McConachie &lt;michael@redhat.com&gt;</dc:contributor>
        <dc:contributor xmlns:dc="http://purl.org/dc/elements/1.1/">Rodney Mercer &lt;rmercer@harris.com&gt;</dc:contributor>
        <dc:contributor xmlns:dc="http://purl.org/dc/elements/1.1/">Brian Millett &lt;bmillett@gmail.com&gt;</dc:contributor>
        <dc:contributor xmlns:dc="http://purl.org/dc/elements/1.1/">mmosel &lt;mmosel@kde.example.com&gt;</dc:contributor>
        <dc:contributor xmlns:dc="http://purl.org/dc/elements/1.1/">Zbynek Moravec &lt;zmoravec@redhat.com&gt;</dc:contributor>
        <dc:contributor xmlns:dc="http://purl.org/dc/elements/1.1/">Kazuo Moriwaka &lt;moriwaka@users.noreply.github.com&gt;</dc:contributor>
        <dc:contributor xmlns:dc="http://purl.org/dc/elements/1.1/">Michael Moseley &lt;michael@eclipse.ncsc.mil&gt;</dc:contributor>
        <dc:contributor xmlns:dc="http://purl.org/dc/elements/1.1/">Joe Nall &lt;joe@nall.com&gt;</dc:contributor>
        <dc:contributor xmlns:dc="http://purl.org/dc/elements/1.1/">Neiloy &lt;neiloy@redhat.com&gt;</dc:contributor>
        <dc:contributor xmlns:dc="http://purl.org/dc/elements/1.1/">Michele Newman &lt;mnewman@redhat.com&gt;</dc:contributor>
        <dc:contributor xmlns:dc="http://purl.org/dc/elements/1.1/">Kaustubh Padegaonkar &lt;theTuxRacer@gmail.com&gt;</dc:contributor>
        <dc:contributor xmlns:dc="http://purl.org/dc/elements/1.1/">Michael Palmiotto &lt;mpalmiotto@tresys.com&gt;</dc:contributor>
        <dc:contributor xmlns:dc="http://purl.org/dc/elements/1.1/">pcactr &lt;paul.c.arnold4.ctr@mail.mil&gt;</dc:contributor>
        <dc:contributor xmlns:dc="http://purl.org/dc/elements/1.1/">Kenneth Peeples &lt;kennethwpeeples@gmail.com&gt;</dc:contributor>
        <dc:contributor xmlns:dc="http://purl.org/dc/elements/1.1/">Frank Lin PIAT &lt;fpiat@klabs.be&gt;</dc:contributor>
        <dc:contributor xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Preisler &lt;mpreisle@redhat.com&gt;</dc:contributor>
        <dc:contributor xmlns:dc="http://purl.org/dc/elements/1.1/">Raphael Sanchez Prudencio &lt;rsprudencio@redhat.com&gt;</dc:contributor>
        <dc:contributor xmlns:dc="http://purl.org/dc/elements/1.1/">T.O. Radzy Radzykewycz &lt;radzy@windriver.com&gt;</dc:contributor>
        <dc:contributor xmlns:dc="http://purl.org/dc/elements/1.1/">Rick Renshaw &lt;Richard_Renshaw@xtoenergy.com&gt;</dc:contributor>
        <dc:contributor xmlns:dc="http://purl.org/dc/elements/1.1/">Chris Reynolds &lt;c.reynolds82@gmail.com&gt;</dc:contributor>
        <dc:contributor xmlns:dc="http://purl.org/dc/elements/1.1/">Pat Riehecky &lt;riehecky@fnal.gov&gt;</dc:contributor>
        <dc:contributor xmlns:dc="http://purl.org/dc/elements/1.1/">Joshua Roys &lt;roysjosh@gmail.com&gt;</dc:contributor>
        <dc:contributor xmlns:dc="http://purl.org/dc/elements/1.1/">rrenshaw &lt;bofh69@yahoo.com&gt;</dc:contributor>
        <dc:contributor xmlns:dc="http://purl.org/dc/elements/1.1/">Ray Shaw (Cont ARL/CISD) rvshaw &lt;rvshaw@esme.arl.army.mil&gt;</dc:contributor>
        <dc:contributor xmlns:dc="http://purl.org/dc/elements/1.1/">Willy Santos &lt;wsantos@redhat.com&gt;</dc:contributor>
        <dc:contributor xmlns:dc="http://purl.org/dc/elements/1.1/">Gautam Satish &lt;gautams@hpe.com&gt;</dc:contributor>
        <dc:contributor xmlns:dc="http://purl.org/dc/elements/1.1/">Watson Sato &lt;wsato@redhat.com&gt;</dc:contributor>
        <dc:contributor xmlns:dc="http://purl.org/dc/elements/1.1/">Satoru SATOH &lt;satoru.satoh@gmail.com&gt;</dc:contributor>
        <dc:contributor xmlns:dc="http://purl.org/dc/elements/1.1/">Spencer Shimko &lt;sshimko@tresys.com&gt;</dc:contributor>
        <dc:contributor xmlns:dc="http://purl.org/dc/elements/1.1/">Thomas Sjögren &lt;konstruktoid@users.noreply.github.com&gt;</dc:contributor>
        <dc:contributor xmlns:dc="http://purl.org/dc/elements/1.1/">Francisco Slavin &lt;fslavin@tresys.com&gt;</dc:contributor>
        <dc:contributor xmlns:dc="http://purl.org/dc/elements/1.1/">David Smith &lt;dsmith@eclipse.ncsc.mil&gt;</dc:contributor>
        <dc:contributor xmlns:dc="http://purl.org/dc/elements/1.1/">Kevin Spargur &lt;kspargur@redhat.com&gt;</dc:contributor>
        <dc:contributor xmlns:dc="http://purl.org/dc/elements/1.1/">Kenneth Stailey &lt;kstailey.lists@gmail.com&gt;</dc:contributor>
        <dc:contributor xmlns:dc="http://purl.org/dc/elements/1.1/">Leland Steinke &lt;leland.j.steinke.ctr@mail.mil&gt;</dc:contributor>
        <dc:contributor xmlns:dc="http://purl.org/dc/elements/1.1/">Philippe Thierry &lt;phil@reseau-libre.net&gt;</dc:contributor>
        <dc:contributor xmlns:dc="http://purl.org/dc/elements/1.1/">Paul Tittle &lt;ptittle@cmf.nrl.navy.mil&gt;</dc:contributor>
        <dc:contributor xmlns:dc="http://purl.org/dc/elements/1.1/">Jeb Trayer &lt;jeb.d.trayer@uscg.mil&gt;</dc:contributor>
        <dc:contributor xmlns:dc="http://purl.org/dc/elements/1.1/">Shawn Wells &lt;shawn@redhat.com&gt;</dc:contributor>
        <dc:contributor xmlns:dc="http://purl.org/dc/elements/1.1/">Rob Wilmoth &lt;rwilmoth@redhat.com&gt;</dc:contributor>
        <dc:contributor xmlns:dc="http://purl.org/dc/elements/1.1/">Lucas Yamanishi &lt;lucas.yamanishi@onyxpoint.com&gt;</dc:contributor>
        <dc:contributor xmlns:dc="http://purl.org/dc/elements/1.1/">Kevin Zimmerman &lt;kevin.zimmerman@kitware.com&gt;</dc:contributor>
        <dc:contributor xmlns:dc="http://purl.org/dc/elements/1.1/">Jan Černý &lt;jcerny@redhat.com&gt;</dc:contributor>
        <dc:contributor xmlns:dc="http://purl.org/dc/elements/1.1/">Michal Šrubař &lt;msrubar@redhat.com&gt;</dc:contributor>
        <dc:source xmlns:dc="http://purl.org/dc/elements/1.1/">https://github.com/OpenSCAP/scap-security-guide/releases/latest</dc:source>
      </metadata>
      <model system="urn:xccdf:scoring:default"/>
      <Profile id="xccdf_org.ssgproject.content_profile_stig-java-upstream">
        <title xml:lang="en-US">Java Runtime Environment (JRE) STIG</title>
        <description xml:lang="en-US">The Java Runtime Environment (JRE) is a bundle developed
and offered by Oracle Corporation which includes the Java Virtual Machine
(JVM), class libraries, and other components necessary to run Java
applications and applets. Certain default settings within the JRE pose
a security risk so it is necessary to deploy system wide properties to
ensure a higher degree of security when utilizing the JRE.

The IBM Corporation also develops and bundles the Java Runtime Environment
(JRE) as well as Red Hat with OpenJDK.</description>
        <select idref="xccdf_org.ssgproject.content_rule_java_jre_deployment_config_exists" selected="true"/>
        <select idref="xccdf_org.ssgproject.content_rule_java_jre_deployment_config_properties" selected="true"/>
        <select idref="xccdf_org.ssgproject.content_rule_java_jre_deployment_config_mandatory" selected="true"/>
        <select idref="xccdf_org.ssgproject.content_rule_java_jre_deployment_properties_exists" selected="true"/>
        <select idref="xccdf_org.ssgproject.content_rule_java_jre_untrusted_sources" selected="true"/>
        <select idref="xccdf_org.ssgproject.content_rule_java_jre_untrusted_sources_locked" selected="true"/>
        <select idref="xccdf_org.ssgproject.content_rule_java_jre_validation_crl" selected="true"/>
        <select idref="xccdf_org.ssgproject.content_rule_java_jre_validation_crl_locked" selected="true"/>
        <select idref="xccdf_org.ssgproject.content_rule_java_jre_validation_ocsp" selected="true"/>
        <select idref="xccdf_org.ssgproject.content_rule_java_jre_validation_ocsp_locked" selected="true"/>
        <select idref="xccdf_org.ssgproject.content_rule_java_jre_updated" selected="true"/>
        <select idref="xccdf_org.ssgproject.content_group_remediation_functions" selected="false"/>
        <select idref="xccdf_org.ssgproject.content_group_intro" selected="false"/>
        <select idref="xccdf_org.ssgproject.content_group_how-to-use" selected="false"/>
        <select idref="xccdf_org.ssgproject.content_group_intro-read-sections-completely" selected="false"/>
        <select idref="xccdf_org.ssgproject.content_group_intro-test-non-production" selected="false"/>
        <select idref="xccdf_org.ssgproject.content_group_intro-root-shell-assumed" selected="false"/>
        <select idref="xccdf_org.ssgproject.content_group_intro-formatting-conventions" selected="false"/>
      </Profile>
      <Group id="xccdf_org.ssgproject.content_group_remediation_functions">
        <title xml:lang="en-US">Remediation functions used by the SCAP Security Guide Project</title>
        <description xml:lang="en-US">XCCDF form of the various remediation functions as used by remediation scripts from the SCAP Security Guide Project.</description>
        <Value id="xccdf_org.ssgproject.content_value_function_replace_or_append" hidden="true" prohibitChanges="true" operator="equals" type="string">
          <title xml:lang="en-US">Remediation function replace_or_append</title>
          <description xml:lang="en-US">Shared bash remediation function. Not intended to be changed by tailoring.</description>
          <value># Function to replace configuration setting in config file or add the configuration setting if
# it does not exist.
#
# Expects four arguments:
#
# config_file:		Configuration file that will be modified
# key:			Configuration option to change
# value:		Value of the configuration option to change
# cce:			The CCE identifier or '@CCENUM@' if no CCE identifier exists
#
# Optional arugments:
#
# format:		Optional argument to specify the format of how key/value should be
# 			modified/appended in the configuration file. The default is key = value.
#
# Example Call(s):
#
#     With default format of 'key = value':
#     replace_or_append '/etc/sysctl.conf' '^kernel.randomize_va_space' '2' '@CCENUM@'
#
#     With custom key/value format:
#     replace_or_append '/etc/sysconfig/selinux' '^SELINUX=' 'disabled' '@CCENUM@' '%s=%s'
#
#     With a variable:
#     replace_or_append '/etc/sysconfig/selinux' '^SELINUX=' $var_selinux_state '@CCENUM@' '%s=%s'
#
function replace_or_append {
  local config_file=$1
  local key=$2
  local value=$3
  local cce=$4
  local format=$5

  # Check sanity of the input
  if [ $# -lt "3" ]
  then
        echo "Usage: replace_or_append 'config_file_location' 'key_to_search' 'new_value'"
        echo
        echo "If symlinks need to be taken into account, add yes/no to the last argument"
        echo "to allow to 'follow_symlinks'."
        echo "Aborting."
        exit 1
  fi

  # Test if the config_file is a symbolic link. If so, use --follow-symlinks with sed.
  # Otherwise, regular sed command will do.
  if test -L $config_file; then
    sed_command="sed -i --follow-symlinks"
  else
    sed_command="sed -i"
  fi

  # Test that the cce arg is not empty or does not equal @CCENUM@.
  # If @CCENUM@ exists, it means that there is no CCE assigned.
  if ! [ "x$cce" = x ] &amp;&amp; [ "$cce" != '@CCENUM@' ]; then
    cce="CCE-${cce}"
  else
    cce="CCE"
  fi

  # Strip any search characters in the key arg so that the key can be replaced without
  # adding any search characters to the config file.
  stripped_key=$(sed "s/[\^=\$,;+]*//g" &lt;&lt;&lt; $key)

  # If there is no print format specified in the last arg, use the default format.
  if ! [ "x$format" = x ] ; then
    printf -v formatted_output "$format" "$stripped_key" "$value"
  else
    formatted_output="$stripped_key = $value"
  fi

  # If the key exists, change it. Otherwise, add it to the config_file.
  if `grep -qi $key $config_file` ; then
    eval $sed_command "s/$key.*/$formatted_output/g" $config_file
  else
    # \n is precaution for case where file ends without trailing newline
    echo -e "\n# Per $cce: Set $formatted_output in $config_file" &gt;&gt; $config_file
    echo -e "$formatted_output" &gt;&gt; $config_file
  fi

}
</value>
        </Value>
        <Value id="xccdf_org.ssgproject.content_value_function_firefox_cfg_setting" hidden="true" prohibitChanges="true" operator="equals" type="string">
          <title xml:lang="en-US">Remediation function firefox_cfg_setting</title>
          <description xml:lang="en-US">Shared bash remediation function. Not intended to be changed by tailoring.</description>
          <value># Function to replace configuration setting(s) in the Firefox preferences configuration (.cfg) file or add the
# preference if it does not exist.
#
# Expects three arguments:
#
# config_file:          Configuration file that will be modified
# key:                  Configuration option to change
# value:                Value of the configuration option to change
#
#
# Example Call(s):
#
#     Without string or variable:
#     firefox_cfg_setting "stig.cfg" "extensions.update.enabled" "false"
#
#     With string:
#     firefox_cfg_setting "stig.cfg" "security.default_personal_cert" "\"Ask Every Time\""
#
#     With a string variable:
#     firefox_cfg_setting "stig.cfg" "browser.startup.homepage\" "\"${var_default_home_page}\""
#
function firefox_cfg_setting {
  local firefox_cfg=$1
  local key=$2
  local value=$3
  local firefox_dirs="/usr/lib/firefox /usr/lib64/firefox /usr/local/lib/firefox /usr/local/lib64/firefox"

  # Check sanity of input
  if [ $# -lt "3" ]
  then
        echo "Usage: firefox_cfg_setting 'config_cfg_file' 'key_to_search' 'new_value'"
        echo
        echo "Aborting."
        exit 1
  fi

  # Check the possible Firefox install directories
  for firefox_dir in ${firefox_dirs}; do
    # If the Firefox directory exists, then Firefox is installed
    if [ -d "${firefox_dir}" ]; then
      # Make sure the Firefox .cfg file exists and has the appropriate permissions
      if ! [ -f "${firefox_dir}/${firefox_cfg}" ] ; then
        touch "${firefox_dir}/${firefox_cfg}"
        chmod 644 "${firefox_dir}/${firefox_cfg}"
      fi

      # If the key exists, change it. Otherwise, add it to the config_file.
      if `grep -q "^lockPref(\"${key}\", " "${firefox_dir}/${firefox_cfg}"` ; then
        sed -i "s/lockPref(\"${key}\".*/lockPref(\"${key}\", ${value});/g" "${firefox_dir}/${firefox_cfg}"
      else
        echo "lockPref(\"${key}\", ${value});" &gt;&gt; "${firefox_dir}/${firefox_cfg}"
      fi
    fi
  done
}
</value>
        </Value>
        <Value id="xccdf_org.ssgproject.content_value_function_fix_audit_syscall_rule" hidden="true" prohibitChanges="true" operator="equals" type="string">
          <title xml:lang="en-US">Remediation function fix_audit_syscall_rule</title>
          <description xml:lang="en-US">Shared bash remediation function. Not intended to be changed by tailoring.</description>
          <value># Function to fix syscall audit rule for given system call. It is
# based on example audit syscall rule definitions as outlined in
# /usr/share/doc/audit-2.3.7/stig.rules file provided with the audit
# package. It will combine multiple system calls belonging to the same
# syscall group into one audit rule (rather than to create audit rule per
# different system call) to avoid audit infrastructure performance penalty
# in the case of 'one-audit-rule-definition-per-one-system-call'. See:
#
#   https://www.redhat.com/archives/linux-audit/2014-November/msg00009.html
#
# for further details.
#
# Expects five arguments (each of them is required) in the form of:
# * audit tool				tool used to load audit rules,
# 					either 'auditctl', or 'augenrules
# * audit rules' pattern		audit rule skeleton for same syscall
# * syscall group			greatest common string this rule shares
# 					with other rules from the same group
# * architecture			architecture this rule is intended for
# * full form of new rule to add	expected full form of audit rule as to be
# 					added into audit.rules file
#
# Note: The 2-th up to 4-th arguments are used to determine how many existing
# audit rules will be inspected for resemblance with the new audit rule
# (5-th argument) the function is going to add. The rule's similarity check
# is performed to optimize audit.rules definition (merge syscalls of the same
# group into one rule) to avoid the "single-syscall-per-audit-rule" performance
# penalty.
#
# Example call:
#
#	See e.g. 'audit_rules_file_deletion_events.sh' remediation script
#
function fix_audit_syscall_rule {

# Load function arguments into local variables
local tool="$1"
local pattern="$2"
local group="$3"
local arch="$4"
local full_rule="$5"

# Check sanity of the input
if [ $# -ne "5" ]
then
	echo "Usage: fix_audit_syscall_rule 'tool' 'pattern' 'group' 'arch' 'full rule'"
	echo "Aborting."
	exit 1
fi

# Create a list of audit *.rules files that should be inspected for presence and correctness
# of a particular audit rule. The scheme is as follows:
# 
# -----------------------------------------------------------------------------------------
#  Tool used to load audit rules | Rule already defined  |  Audit rules file to inspect    |
# -----------------------------------------------------------------------------------------
#        auditctl                |     Doesn't matter    |  /etc/audit/audit.rules         |
# -----------------------------------------------------------------------------------------
#        augenrules              |          Yes          |  /etc/audit/rules.d/*.rules     |
#        augenrules              |          No           |  /etc/audit/rules.d/$key.rules  |
# -----------------------------------------------------------------------------------------
#
declare -a files_to_inspect

# First check sanity of the specified audit tool
if [ "$tool" != 'auditctl' ] &amp;&amp; [ "$tool" != 'augenrules' ]
then
	echo "Unknown audit rules loading tool: $1. Aborting."
	echo "Use either 'auditctl' or 'augenrules'!"
	exit 1
# If audit tool is 'auditctl', then add '/etc/audit/audit.rules'
# file to the list of files to be inspected
elif [ "$tool" == 'auditctl' ]
then
	files_to_inspect=("${files_to_inspect[@]}" '/etc/audit/audit.rules' )
# If audit tool is 'augenrules', then check if the audit rule is defined
# If rule is defined, add '/etc/audit/rules.d/*.rules' to the list for inspection
# If rule isn't defined yet, add '/etc/audit/rules.d/$key.rules' to the list for inspection
elif [ "$tool" == 'augenrules' ]
then
	# Extract audit $key from audit rule so we can use it later
	key=$(expr "$full_rule" : '.*-k[[:space:]]\([^[:space:]]\+\)')
	# Check if particular audit rule is already defined
	IFS=$'\n' matches=($(sed -s -n -e "/${pattern}/!d" -e "/${arch}/!d" -e "/${group}/!d;F" /etc/audit/rules.d/*.rules))
	# Reset IFS back to default
	unset IFS
	for match in "${matches[@]}"
	do
		files_to_inspect=("${files_to_inspect[@]}" "${match}")
	done
	# Case when particular rule isn't defined in /etc/audit/rules.d/*.rules yet
	if [ ${#files_to_inspect[@]} -eq "0" ]
	then
		files_to_inspect="/etc/audit/rules.d/$key.rules"
		if [ ! -e "$files_to_inspect" ]
		then
			touch "$files_to_inspect"
			chmod 0640 "$files_to_inspect"
		fi
	fi
fi

#
# Indicator that we want to append $full_rule into $audit_file by default
local append_expected_rule=0

for audit_file in "${files_to_inspect[@]}"
do

	# Filter existing $audit_file rules' definitions to select those that:
	# * follow the rule pattern, and
	# * meet the hardware architecture requirement, and
	# * are current syscall group specific
	IFS=$'\n' existing_rules=($(sed -e "/${pattern}/!d" -e "/${arch}/!d" -e "/${group}/!d"  "$audit_file"))
	# Reset IFS back to default
	unset IFS

	# Process rules found case-by-case
	for rule in "${existing_rules[@]}"
	do
		# Found rule is for same arch &amp; key, but differs (e.g. in count of -S arguments)
		if [ "${rule}" != "${full_rule}" ]
		then
			# If so, isolate just '(-S \w)+' substring of that rule
			rule_syscalls=$(echo $rule | grep -o -P '(-S \w+ )+')
			# Check if list of '-S syscall' arguments of that rule is subset
			# of '-S syscall' list of expected $full_rule
			if grep -q -- "$rule_syscalls" &lt;&lt;&lt; "$full_rule"
			then
				# Rule is covered (i.e. the list of -S syscalls for this rule is
				# subset of -S syscalls of $full_rule =&gt; existing rule can be deleted
				# Thus delete the rule from audit.rules &amp; our array
				sed -i -e "/${rule}/d" "$audit_file"
				existing_rules=("${existing_rules[@]//$rule/}")
			else
				# Rule isn't covered by $full_rule - it besides -S syscall arguments
				# for this group contains also -S syscall arguments for other syscall
				# group. Example: '-S lchown -S fchmod -S fchownat' =&gt; group='chown'
				# since 'lchown' &amp; 'fchownat' share 'chown' substring
				# Therefore:
				# * 1) delete the original rule from audit.rules
				# (original '-S lchown -S fchmod -S fchownat' rule would be deleted)
				# * 2) delete the -S syscall arguments for this syscall group, but
				# keep those not belonging to this syscall group
				# (original '-S lchown -S fchmod -S fchownat' would become '-S fchmod'
				# * 3) append the modified (filtered) rule again into audit.rules
				# if the same rule not already present
				#
				# 1) Delete the original rule
				sed -i -e "/${rule}/d" "$audit_file"
				# 2) Delete syscalls for this group, but keep those from other groups
				# Convert current rule syscall's string into array splitting by '-S' delimiter
				IFS=$'-S' read -a rule_syscalls_as_array &lt;&lt;&lt; "$rule_syscalls"
				# Reset IFS back to default
				unset IFS
				# Declare new empty string to hold '-S syscall' arguments from other groups
				new_syscalls_for_rule=''
				# Walk through existing '-S syscall' arguments
				for syscall_arg in "${rule_syscalls_as_array[@]}"
				do
					# Skip empty $syscall_arg values
					if [ "$syscall_arg" == '' ]
					then
						continue
					fi
					# If the '-S syscall' doesn't belong to current group add it to the new list
					# (together with adding '-S' delimiter back for each of such item found)
					if grep -q -v -- "$group" &lt;&lt;&lt; "$syscall_arg"
					then
						new_syscalls_for_rule="$new_syscalls_for_rule -S $syscall_arg"
					fi
				done
				# Replace original '-S syscall' list with the new one for this rule
				updated_rule=${rule//$rule_syscalls/$new_syscalls_for_rule}
				# Squeeze repeated whitespace characters in rule definition (if any) into one
				updated_rule=$(echo "$updated_rule" | tr -s '[:space:]')
				# 3) Append the modified / filtered rule again into audit.rules
				#    (but only in case it's not present yet to prevent duplicate definitions)
				if ! grep -q -- "$updated_rule" "$audit_file"
				then
					echo "$updated_rule" &gt;&gt; "$audit_file"
				fi
			fi
		else
			# $audit_file already contains the expected rule form for this
			# architecture &amp; key =&gt; don't insert it second time
			append_expected_rule=1
		fi
	done

	# We deleted all rules that were subset of the expected one for this arch &amp; key.
	# Also isolated rules containing system calls not from this system calls group.
	# Now append the expected rule if it's not present in $audit_file yet
	if [[ ${append_expected_rule} -eq "0" ]]
	then
		echo "$full_rule" &gt;&gt; "$audit_file"
	fi
done

}
</value>
        </Value>
        <Value id="xccdf_org.ssgproject.content_value_function_populate" hidden="true" prohibitChanges="true" operator="equals" type="string">
          <title xml:lang="en-US">Remediation function populate</title>
          <description xml:lang="en-US">Shared bash remediation function. Not intended to be changed by tailoring.</description>
          <value># The populate function isn't directly used by SSG at the moment but it can be 
# used for testing purposes and will be used in SSG Testsuite in the future.

function populate {
# code to populate environment variables needed (for unit testing)
if [ -z "${!1}" ]; then
	echo "$1 is not defined. Exiting."
	exit
fi
}
</value>
        </Value>
        <Value id="xccdf_org.ssgproject.content_value_function_perform_audit_rules_privileged_commands_remediation" hidden="true" prohibitChanges="true" operator="equals" type="string">
          <title xml:lang="en-US">Remediation function perform_audit_rules_privileged_commands_remediation</title>
          <description xml:lang="en-US">Shared bash remediation function. Not intended to be changed by tailoring.</description>
          <value># Function to perform remediation for 'audit_rules_privileged_commands' rule
#
# Expects two arguments:
#
# audit_tool		tool used to load audit rules
# 			One of 'auditctl' or 'augenrules'
#
# min_auid		Minimum original ID the user logged in with
# 			'500' for RHEL-6 and before, '1000' for RHEL-7 and after.
#
# Example Call(s):
#
#      perform_audit_rules_privileged_commands_remediation "auditctl" "500"
#      perform_audit_rules_privileged_commands_remediation "augenrules"	"1000"
#
function perform_audit_rules_privileged_commands_remediation {
#
# Load function arguments into local variables
local tool="$1"
local min_auid="$2"

# Check sanity of the input
if [ $# -ne "2" ]
then
	echo "Usage: perform_audit_rules_privileged_commands_remediation 'auditctl | augenrules' '500 | 1000'"
	echo "Aborting."
	exit 1
fi

declare -a files_to_inspect=()

# Check sanity of the specified audit tool
if [ "$tool" != 'auditctl' ] &amp;&amp; [ "$tool" != 'augenrules' ]
then
	echo "Unknown audit rules loading tool: $1. Aborting."
	echo "Use either 'auditctl' or 'augenrules'!"
	exit 1
# If the audit tool is 'auditctl', then:
# * add '/etc/audit/audit.rules'to the list of files to be inspected,
# * specify '/etc/audit/audit.rules' as the output audit file, where
#   missing rules should be inserted
elif [ "$tool" == 'auditctl' ]
then
	files_to_inspect=("/etc/audit/audit.rules")
	output_audit_file="/etc/audit/audit.rules"
#
# If the audit tool is 'augenrules', then:
# * add '/etc/audit/rules.d/*.rules' to the list of files to be inspected
#   (split by newline),
# * specify /etc/audit/rules.d/privileged.rules' as the output file, where
#   missing rules should be inserted
elif [ "$tool" == 'augenrules' ]
then
	IFS=$'\n' files_to_inspect=($(find /etc/audit/rules.d -maxdepth 1 -type f -name *.rules -print))
	output_audit_file="/etc/audit/rules.d/privileged.rules"
fi

# Obtain the list of SUID/SGID binaries on the particular system (split by newline)
# into privileged_binaries array
IFS=$'\n' privileged_binaries=($(find / -xdev -type f -perm -4000 -o -type f -perm -2000 2&gt;/dev/null))

# Keep list of SUID/SGID binaries that have been already handled within some previous iteration
declare -a sbinaries_to_skip=()

# For each found sbinary in privileged_binaries list
for sbinary in "${privileged_binaries[@]}"
do

	# Replace possible slash '/' character in sbinary definition so we could use it in sed expressions below
	sbinary_esc=${sbinary//$'/'/$'\/'}
	# Check if this sbinary wasn't already handled in some of the previous iterations
	# Return match only if whole sbinary definition matched (not in the case just prefix matched!!!)
	if [[ $(sed -ne "/${sbinary_esc}$/p" &lt;&lt;&lt; ${sbinaries_to_skip[@]}) ]]
	then
		# If so, don't process it second time &amp; go to process next sbinary
		continue
	fi

	# Reset the counter of inspected files when starting to check
	# presence of existing audit rule for new sbinary
	local count_of_inspected_files=0

	# For each audit rules file from the list of files to be inspected
	for afile in "${files_to_inspect[@]}"
	do

		# Search current audit rules file's content for match. Match criteria:
		# * existing rule is for the same SUID/SGID binary we are currently processing (but
		#   can contain multiple -F path= elements covering multiple SUID/SGID binaries)
		# * existing rule contains all arguments from expected rule form (though can contain
		#   them in arbitrary order)
	
		base_search=$(sed -e "/-a always,exit/!d" -e "/-F path=${sbinary_esc}$/!d"   \
		    		  -e "/-F path=[^[:space:]]\+/!d" -e "/-F perm=.*/!d"       \
				  -e "/-F auid&gt;=${min_auid}/!d" -e "/-F auid!=4294967295/!d"  \
				  -e "/-k privileged/!d" $afile)

		# Increase the count of inspected files for this sbinary
		count_of_inspected_files=$((count_of_inspected_files + 1))

		# Define expected rule form for this binary
		expected_rule="-a always,exit -F path=${sbinary} -F perm=x -F auid&gt;=${min_auid} -F auid!=4294967295 -k privileged"

		# Require execute access type to be set for existing audit rule
		exec_access='x'

		# Search current audit rules file's content for presence of rule pattern for this sbinary
		if [[ $base_search ]]
		then

			# Current audit rules file already contains rule for this binary =&gt;
			# Store the exact form of found rule for this binary for further processing
			concrete_rule=$base_search

			# Select all other SUID/SGID binaries possibly also present in the found rule
			IFS=$'\n' handled_sbinaries=($(grep -o -e "-F path=[^[:space:]]\+" &lt;&lt;&lt; $concrete_rule))
			IFS=$' ' handled_sbinaries=(${handled_sbinaries[@]//-F path=/})

			# Merge the list of such SUID/SGID binaries found in this iteration with global list ignoring duplicates
			sbinaries_to_skip=($(for i in "${sbinaries_to_skip[@]}" "${handled_sbinaries[@]}"; do echo $i; done | sort -du))

			# Separate concrete_rule into three sections using hash '#'
			# sign as a delimiter around rule's permission section borders
			concrete_rule=$(echo $concrete_rule | sed -n "s/\(.*\)\+\(-F perm=[rwax]\+\)\+/\1#\2#/p")

			# Split concrete_rule into head, perm, and tail sections using hash '#' delimiter
			IFS=$'#' read rule_head rule_perm rule_tail &lt;&lt;&lt;  "$concrete_rule"

			# Extract already present exact access type [r|w|x|a] from rule's permission section
			access_type=${rule_perm//-F perm=/}

			# Verify current permission access type(s) for rule contain 'x' (execute) permission
			if ! grep -q "$exec_access" &lt;&lt;&lt; "$access_type"
			then

				# If not, append the 'x' (execute) permission to the existing access type bits
				access_type="$access_type$exec_access"
				# Reconstruct the permissions section for the rule
				new_rule_perm="-F perm=$access_type"
				# Update existing rule in current audit rules file with the new permission section
				sed -i "s#${rule_head}\(.*\)${rule_tail}#${rule_head}${new_rule_perm}${rule_tail}#" $afile

			fi

		# If the required audit rule for particular sbinary wasn't found yet, insert it under following conditions:
		#
		# * in the "auditctl" mode of operation insert particular rule each time
		#   (because in this mode there's only one file -- /etc/audit/audit.rules to be inspected for presence of this rule),
		#
		# * in the "augenrules" mode of operation insert particular rule only once and only in case we have already
		#   searched all of the files from /etc/audit/rules.d/*.rules location (since that audit rule can be defined
		#   in any of those files and if not, we want it to be inserted only once into /etc/audit/rules.d/privileged.rules file)
		#
		elif [ "$tool" == "auditctl" ] || [[ "$tool" == "augenrules" &amp;&amp; $count_of_inspected_files -eq "${#files_to_inspect[@]}" ]]
		then

			# Current audit rules file's content doesn't contain expected rule for this
			# SUID/SGID binary yet =&gt; append it
			echo $expected_rule &gt;&gt; $output_audit_file
		fi

	done

done
}	
</value>
        </Value>
        <Value id="xccdf_org.ssgproject.content_value_function_rhel7_fedora_perform_audit_adjtimex_settimeofday_stime_remediation" hidden="true" prohibitChanges="true" operator="equals" type="string">
          <title xml:lang="en-US">Remediation function rhel7_fedora_perform_audit_adjtimex_settimeofday_stime_remediation</title>
          <description xml:lang="en-US">Shared bash remediation function. Not intended to be changed by tailoring.</description>
          <value># Perform the remediation for the 'adjtimex', 'settimeofday', and 'stime' audit
# system calls on Red Hat Enterprise Linux 7 or Fedora OSes
function rhel7_fedora_perform_audit_adjtimex_settimeofday_stime_remediation {

# Retrieve hardware architecture of the underlying system
[ $(getconf LONG_BIT) = "32" ] &amp;&amp; RULE_ARCHS=("b32") || RULE_ARCHS=("b32" "b64")

for ARCH in "${RULE_ARCHS[@]}"
do

	PATTERN="-a always,exit -F arch=${ARCH} -S .* -k *"
	# Create expected audit group and audit rule form for particular system call &amp; architecture
	if [ ${ARCH} = "b32" ]
	then
		# stime system call is known at 32-bit arch (see e.g "$ ausyscall i386 stime" 's output)
		# so append it to the list of time group system calls to be audited
		GROUP="\(adjtimex\|settimeofday\|stime\)"
		FULL_RULE="-a always,exit -F arch=${ARCH} -S adjtimex -S settimeofday -S stime -k audit_time_rules"
	elif [ ${ARCH} = "b64" ]
	then
		# stime system call isn't known at 64-bit arch (see "$ ausyscall x86_64 stime" 's output)
		# therefore don't add it to the list of time group system calls to be audited
		GROUP="\(adjtimex\|settimeofday\)"
		FULL_RULE="-a always,exit -F arch=${ARCH} -S adjtimex -S settimeofday -k audit_time_rules"
	fi
	# Perform the remediation for both possible tools: 'auditctl' and 'augenrules'
	fix_audit_syscall_rule "auditctl" "$PATTERN" "$GROUP" "$ARCH" "$FULL_RULE"
	fix_audit_syscall_rule "augenrules" "$PATTERN" "$GROUP" "$ARCH" "$FULL_RULE"
done

}
</value>
        </Value>
        <Value id="xccdf_org.ssgproject.content_value_function_rhel6_perform_audit_adjtimex_settimeofday_stime_remediation" hidden="true" prohibitChanges="true" operator="equals" type="string">
          <title xml:lang="en-US">Remediation function rhel6_perform_audit_adjtimex_settimeofday_stime_remediation</title>
          <description xml:lang="en-US">Shared bash remediation function. Not intended to be changed by tailoring.</description>
          <value># Function to fix syscall audit rule for given system call. It is
# based on example audit syscall rule definitions as outlined in
# /usr/share/doc/audit-2.3.7/stig.rules file provided with the audit
# package. It will combine multiple system calls belonging to the same
# syscall group into one audit rule (rather than to create audit rule per
# different system call) to avoid audit infrastructure performance penalty
# in the case of 'one-audit-rule-definition-per-one-system-call'. See:
#
#   https://www.redhat.com/archives/linux-audit/2014-November/msg00009.html
#
# for further details.
#
# Expects five arguments (each of them is required) in the form of:
# * audit tool				tool used to load audit rules,
# 					either 'auditctl', or 'augenrules
# * audit rules' pattern		audit rule skeleton for same syscall
# * syscall group			greatest common string this rule shares
# 					with other rules from the same group
# * architecture			architecture this rule is intended for
# * full form of new rule to add	expected full form of audit rule as to be
# 					added into audit.rules file
#
# Note: The 2-th up to 4-th arguments are used to determine how many existing
# audit rules will be inspected for resemblance with the new audit rule
# (5-th argument) the function is going to add. The rule's similarity check
# is performed to optimize audit.rules definition (merge syscalls of the same
# group into one rule) to avoid the "single-syscall-per-audit-rule" performance
# penalty.
#
# Example call:
#
#	See e.g. 'audit_rules_file_deletion_events.sh' remediation script
#
function fix_audit_syscall_rule {

# Load function arguments into local variables
local tool="$1"
local pattern="$2"
local group="$3"
local arch="$4"
local full_rule="$5"

# Check sanity of the input
if [ $# -ne "5" ]
then
	echo "Usage: fix_audit_syscall_rule 'tool' 'pattern' 'group' 'arch' 'full rule'"
	echo "Aborting."
	exit 1
fi

# Create a list of audit *.rules files that should be inspected for presence and correctness
# of a particular audit rule. The scheme is as follows:
# 
# -----------------------------------------------------------------------------------------
#  Tool used to load audit rules | Rule already defined  |  Audit rules file to inspect    |
# -----------------------------------------------------------------------------------------
#        auditctl                |     Doesn't matter    |  /etc/audit/audit.rules         |
# -----------------------------------------------------------------------------------------
#        augenrules              |          Yes          |  /etc/audit/rules.d/*.rules     |
#        augenrules              |          No           |  /etc/audit/rules.d/$key.rules  |
# -----------------------------------------------------------------------------------------
#
declare -a files_to_inspect

# First check sanity of the specified audit tool
if [ "$tool" != 'auditctl' ] &amp;&amp; [ "$tool" != 'augenrules' ]
then
	echo "Unknown audit rules loading tool: $1. Aborting."
	echo "Use either 'auditctl' or 'augenrules'!"
	exit 1
# If audit tool is 'auditctl', then add '/etc/audit/audit.rules'
# file to the list of files to be inspected
elif [ "$tool" == 'auditctl' ]
then
	files_to_inspect=("${files_to_inspect[@]}" '/etc/audit/audit.rules' )
# If audit tool is 'augenrules', then check if the audit rule is defined
# If rule is defined, add '/etc/audit/rules.d/*.rules' to the list for inspection
# If rule isn't defined yet, add '/etc/audit/rules.d/$key.rules' to the list for inspection
elif [ "$tool" == 'augenrules' ]
then
	# Extract audit $key from audit rule so we can use it later
	key=$(expr "$full_rule" : '.*-k[[:space:]]\([^[:space:]]\+\)')
	# Check if particular audit rule is already defined
	IFS=$'\n' matches=($(sed -s -n -e "/${pattern}/!d" -e "/${arch}/!d" -e "/${group}/!d;F" /etc/audit/rules.d/*.rules))
	# Reset IFS back to default
	unset IFS
	for match in "${matches[@]}"
	do
		files_to_inspect=("${files_to_inspect[@]}" "${match}")
	done
	# Case when particular rule isn't defined in /etc/audit/rules.d/*.rules yet
	if [ ${#files_to_inspect[@]} -eq "0" ]
	then
		files_to_inspect="/etc/audit/rules.d/$key.rules"
		if [ ! -e "$files_to_inspect" ]
		then
			touch "$files_to_inspect"
			chmod 0640 "$files_to_inspect"
		fi
	fi
fi

#
# Indicator that we want to append $full_rule into $audit_file by default
local append_expected_rule=0

for audit_file in "${files_to_inspect[@]}"
do

	# Filter existing $audit_file rules' definitions to select those that:
	# * follow the rule pattern, and
	# * meet the hardware architecture requirement, and
	# * are current syscall group specific
	IFS=$'\n' existing_rules=($(sed -e "/${pattern}/!d" -e "/${arch}/!d" -e "/${group}/!d"  "$audit_file"))
	# Reset IFS back to default
	unset IFS

	# Process rules found case-by-case
	for rule in "${existing_rules[@]}"
	do
		# Found rule is for same arch &amp; key, but differs (e.g. in count of -S arguments)
		if [ "${rule}" != "${full_rule}" ]
		then
			# If so, isolate just '(-S \w)+' substring of that rule
			rule_syscalls=$(echo $rule | grep -o -P '(-S \w+ )+')
			# Check if list of '-S syscall' arguments of that rule is subset
			# of '-S syscall' list of expected $full_rule
			if grep -q -- "$rule_syscalls" &lt;&lt;&lt; "$full_rule"
			then
				# Rule is covered (i.e. the list of -S syscalls for this rule is
				# subset of -S syscalls of $full_rule =&gt; existing rule can be deleted
				# Thus delete the rule from audit.rules &amp; our array
				sed -i -e "/${rule}/d" "$audit_file"
				existing_rules=("${existing_rules[@]//$rule/}")
			else
				# Rule isn't covered by $full_rule - it besides -S syscall arguments
				# for this group contains also -S syscall arguments for other syscall
				# group. Example: '-S lchown -S fchmod -S fchownat' =&gt; group='chown'
				# since 'lchown' &amp; 'fchownat' share 'chown' substring
				# Therefore:
				# * 1) delete the original rule from audit.rules
				# (original '-S lchown -S fchmod -S fchownat' rule would be deleted)
				# * 2) delete the -S syscall arguments for this syscall group, but
				# keep those not belonging to this syscall group
				# (original '-S lchown -S fchmod -S fchownat' would become '-S fchmod'
				# * 3) append the modified (filtered) rule again into audit.rules
				# if the same rule not already present
				#
				# 1) Delete the original rule
				sed -i -e "/${rule}/d" "$audit_file"
				# 2) Delete syscalls for this group, but keep those from other groups
				# Convert current rule syscall's string into array splitting by '-S' delimiter
				IFS=$'-S' read -a rule_syscalls_as_array &lt;&lt;&lt; "$rule_syscalls"
				# Reset IFS back to default
				unset IFS
				# Declare new empty string to hold '-S syscall' arguments from other groups
				new_syscalls_for_rule=''
				# Walk through existing '-S syscall' arguments
				for syscall_arg in "${rule_syscalls_as_array[@]}"
				do
					# Skip empty $syscall_arg values
					if [ "$syscall_arg" == '' ]
					then
						continue
					fi
					# If the '-S syscall' doesn't belong to current group add it to the new list
					# (together with adding '-S' delimiter back for each of such item found)
					if grep -q -v -- "$group" &lt;&lt;&lt; "$syscall_arg"
					then
						new_syscalls_for_rule="$new_syscalls_for_rule -S $syscall_arg"
					fi
				done
				# Replace original '-S syscall' list with the new one for this rule
				updated_rule=${rule//$rule_syscalls/$new_syscalls_for_rule}
				# Squeeze repeated whitespace characters in rule definition (if any) into one
				updated_rule=$(echo "$updated_rule" | tr -s '[:space:]')
				# 3) Append the modified / filtered rule again into audit.rules
				#    (but only in case it's not present yet to prevent duplicate definitions)
				if ! grep -q -- "$updated_rule" "$audit_file"
				then
					echo "$updated_rule" &gt;&gt; "$audit_file"
				fi
			fi
		else
			# $audit_file already contains the expected rule form for this
			# architecture &amp; key =&gt; don't insert it second time
			append_expected_rule=1
		fi
	done

	# We deleted all rules that were subset of the expected one for this arch &amp; key.
	# Also isolated rules containing system calls not from this system calls group.
	# Now append the expected rule if it's not present in $audit_file yet
	if [[ ${append_expected_rule} -eq "0" ]]
	then
		echo "$full_rule" &gt;&gt; "$audit_file"
	fi
done

}


# Perform the remediation for the 'adjtimex', 'settimeofday', and 'stime' audit
# system calls on Red Hat Enterprise Linux 6 OS
function rhel6_perform_audit_adjtimex_settimeofday_stime_remediation {

# Retrieve hardware architecture of the underlying system
[ $(getconf LONG_BIT) = "32" ] &amp;&amp; RULE_ARCHS=("b32") || RULE_ARCHS=("b32" "b64")

for ARCH in "${RULE_ARCHS[@]}"
do
	PATTERN="-a always,exit -F arch=${ARCH} -S .* -k *"
	# Create expected audit group and audit rule form for particular system call &amp; architecture
	if [ ${ARCH} = "b32" ]
	then
		# stime system call is known at 32-bit arch (see e.g "$ ausyscall i386 stime" 's output)
		# so append it to the list of time group system calls to be audited
		GROUP="\(adjtimex\|settimeofday\|stime\)"
		FULL_RULE="-a always,exit -F arch=${ARCH} -S adjtimex -S settimeofday -S stime -k audit_time_rules"
	elif [ ${ARCH} = "b64" ]
	then
		# stime system call isn't known at 64-bit arch (see "$ ausyscall x86_64 stime" 's output)
		# therefore don't add it to the list of time group system calls to be audited
		GROUP="\(adjtimex\|settimeofday\)"
		FULL_RULE="-a always,exit -F arch=${ARCH} -S adjtimex -S settimeofday -k audit_time_rules"
	fi
	# Perform the remediation itself
	fix_audit_syscall_rule "auditctl" "$PATTERN" "$GROUP" "$ARCH" "$FULL_RULE"
done

}
</value>
        </Value>
        <Value id="xccdf_org.ssgproject.content_value_function_fix_audit_watch_rule" hidden="true" prohibitChanges="true" operator="equals" type="string">
          <title xml:lang="en-US">Remediation function fix_audit_watch_rule</title>
          <description xml:lang="en-US">Shared bash remediation function. Not intended to be changed by tailoring.</description>
          <value># Function to fix audit file system object watch rule for given path:
# * if rule exists, also verifies the -w bits match the requirements
# * if rule doesn't exist yet, appends expected rule form to $files_to_inspect
#   audit rules file, depending on the tool which was used to load audit rules
#
# Expects four arguments (each of them is required) in the form of:
# * audit tool				tool used to load audit rules,
# 					either 'auditctl', or 'augenrules'
# * path                        	value of -w audit rule's argument
# * required access bits        	value of -p audit rule's argument
# * key                         	value of -k audit rule's argument
#
# Example call:
#
#       fix_audit_watch_rule "auditctl" "/etc/localtime" "wa" "audit_time_rules"
#
function fix_audit_watch_rule {

# Load function arguments into local variables
local tool="$1"
local path="$2"
local required_access_bits="$3"
local key="$4"

# Check sanity of the input
if [ $# -ne "4" ]
then
	echo "Usage: fix_audit_watch_rule 'tool' 'path' 'bits' 'key'"
	echo "Aborting."
	exit 1
fi

# Create a list of audit *.rules files that should be inspected for presence and correctness
# of a particular audit rule. The scheme is as follows:
#
# -----------------------------------------------------------------------------------------
# Tool used to load audit rules	| Rule already defined	|  Audit rules file to inspect	  |
# -----------------------------------------------------------------------------------------
#	auditctl		|     Doesn't matter	|  /etc/audit/audit.rules	  |
# -----------------------------------------------------------------------------------------
# 	augenrules		|          Yes		|  /etc/audit/rules.d/*.rules	  |
# 	augenrules		|          No		|  /etc/audit/rules.d/$key.rules  |
# -----------------------------------------------------------------------------------------
declare -a files_to_inspect

# Check sanity of the specified audit tool
if [ "$tool" != 'auditctl' ] &amp;&amp; [ "$tool" != 'augenrules' ]
then
	echo "Unknown audit rules loading tool: $1. Aborting."
	echo "Use either 'auditctl' or 'augenrules'!"
	exit 1
# If the audit tool is 'auditctl', then add '/etc/audit/audit.rules'
# into the list of files to be inspected
elif [ "$tool" == 'auditctl' ]
then
	files_to_inspect=("${files_to_inspect[@]}" '/etc/audit/audit.rules')
# If the audit is 'augenrules', then check if rule is already defined
# If rule is defined, add '/etc/audit/rules.d/*.rules' to list of files for inspection.
# If rule isn't defined, add '/etc/audit/rules.d/$key.rules' to list of files for inspection.
elif [ "$tool" == 'augenrules' ]
then
	# Case when particular audit rule is already defined in some of /etc/audit/rules.d/*.rules file
	# Get pair -- filepath : matching_row into @matches array
	IFS=$'\n' matches=($(grep -P "[\s]*-w[\s]+$path" /etc/audit/rules.d/*.rules))
	# Reset IFS back to default
	unset IFS
	# For each of the matched entries
	for match in "${matches[@]}"
	do
		# Extract filepath from the match
		rulesd_audit_file=$(echo $match | cut -f1 -d ':')
		# Append that path into list of files for inspection
		files_to_inspect=("${files_to_inspect[@]}" "$rulesd_audit_file")
	done
	# Case when particular audit rule isn't defined yet
	if [ ${#files_to_inspect[@]} -eq "0" ]
	then
		# Append '/etc/audit/rules.d/$key.rules' into list of files for inspection
		files_to_inspect="/etc/audit/rules.d/$key.rules"
		# If the $key.rules file doesn't exist yet, create it with correct permissions
		if [ ! -e "$files_to_inspect" ]
		then
			touch "$files_to_inspect"
			chmod 0640 "$files_to_inspect"
		fi
	fi
fi

# Finally perform the inspection and possible subsequent audit rule
# correction for each of the files previously identified for inspection
for audit_rules_file in "${files_to_inspect[@]}"
do

	# Check if audit watch file system object rule for given path already present
	if grep -q -P -- "[\s]*-w[\s]+$path" "$audit_rules_file"
	then
		# Rule is found =&gt; verify yet if existing rule definition contains
		# all of the required access type bits

		# Escape slashes in path for use in sed pattern below
		local esc_path=${path//$'/'/$'\/'}
		# Define BRE whitespace class shortcut
		local sp="[[:space:]]"
		# Extract current permission access types (e.g. -p [r|w|x|a] values) from audit rule
		current_access_bits=$(sed -ne "s/$sp*-w$sp\+$esc_path$sp\+-p$sp\+\([rxwa]\{1,4\}\).*/\1/p" "$audit_rules_file")
		# Split required access bits string into characters array
		# (to check bit's presence for one bit at a time)
		for access_bit in $(echo "$required_access_bits" | grep -o .)
		do
			# For each from the required access bits (e.g. 'w', 'a') check
			# if they are already present in current access bits for rule.
			# If not, append that bit at the end
			if ! grep -q "$access_bit" &lt;&lt;&lt; "$current_access_bits"
			then
				# Concatenate the existing mask with the missing bit
				current_access_bits="$current_access_bits$access_bit"
			fi
		done
		# Propagate the updated rule's access bits (original + the required
		# ones) back into the /etc/audit/audit.rules file for that rule
		sed -i "s/\($sp*-w$sp\+$esc_path$sp\+-p$sp\+\)\([rxwa]\{1,4\}\)\(.*\)/\1$current_access_bits\3/" "$audit_rules_file"
	else
		# Rule isn't present yet. Append it at the end of $audit_rules_file file
		# with proper key

		echo "-w $path -p $required_access_bits -k $key" &gt;&gt; "$audit_rules_file"
	fi
done
}
</value>
        </Value>
        <Value id="xccdf_org.ssgproject.content_value_function_service_command" hidden="true" prohibitChanges="true" operator="equals" type="string">
          <title xml:lang="en-US">Remediation function service_command</title>
          <description xml:lang="en-US">Shared bash remediation function. Not intended to be changed by tailoring.</description>
          <value># Function to enable/disable and start/stop services on RHEL and Fedora systems.
#
# Example Call(s):
#
#     service_command enable bluetooth
#     service_command disable bluetooth.service
#
#     Using xinetd:
#     service_command disable rsh.socket xinetd=rsh
#
function service_command {

# Load function arguments into local variables
local service_state=$1
local service=$2
local xinetd=$(echo $3 | cut -d'=' -f2)

# Check sanity of the input
if [ $# -lt "2" ]
then
  echo "Usage: service_command 'enable/disable' 'service_name.service'"
  echo
  echo "To enable or disable xinetd services add \'xinetd=service_name\'"
  echo "as the last argument"  
  echo "Aborting."
  exit 1
fi

# If systemctl is installed, use systemctl command; otherwise, use the service/chkconfig commands
if [ -f "/usr/bin/systemctl" ] ; then
  service_util="/usr/bin/systemctl"
else
  service_util="/sbin/service"
  chkconfig_util="/sbin/chkconfig"
fi

# If disable is not specified in arg1, set variables to enable services.
# Otherwise, variables are to be set to disable services.
if [ "$service_state" != 'disable' ] ; then
  service_state="enable"
  service_operation="start"
  chkconfig_state="on"
else
  service_state="disable"
  service_operation="stop"
  chkconfig_state="off"
fi

# If chkconfig_util is not empty, use chkconfig/service commands.
if ! [ "x$chkconfig_util" = x ] ; then
  $service_util $service $service_operation
  $chkconfig_util --level 0123456 $service $chkconfig_state
else
  $service_util $service_operation $service
  $service_util $service_state $service
fi

# Test if local variable xinetd is empty using non-bashism.
# If empty, then xinetd is not being used.
if ! [ "x$xinetd" = x ] ; then
  grep -qi disable /etc/xinetd.d/$xinetd &amp;&amp; \

  if ! [ "$service_operation" != 'disable' ] ; then
    sed -i "s/disable.*/disable         = no/gI" /etc/xinetd.d/$xinetd
  else
    sed -i "s/disable.*/disable         = yes/gI" /etc/xinetd.d/$xinetd
  fi
fi

}
</value>
        </Value>
        <Value id="xccdf_org.ssgproject.content_value_function_firefox_js_setting" hidden="true" prohibitChanges="true" operator="equals" type="string">
          <title xml:lang="en-US">Remediation function firefox_js_setting</title>
          <description xml:lang="en-US">Shared bash remediation function. Not intended to be changed by tailoring.</description>
          <value># Function to replace configuration setting(s) in the Firefox preferences JavaScript file or add the
# preference if it does not exist.
#
# Expects three arguments:
#
# config_file:          Configuration file that will be modified
# key:                  Configuration option to change
# value:                Value of the configuration option to change
#
#
# Example Call(s):
#
#     Without string or variable:
#     firefox_js_setting "stig_settings.js" "general.config.obscure_value" "0"
#
#     With string:
#     firefox_js_setting "stig_settings.js" "general.config.filename" "\"stig.cfg\""
#
#     With a string variable:
#     firefox_js_setting "stig_settings.js" "general.config.filename" "\"$var_config_file_name\""
#
function firefox_js_setting {
  local firefox_js=$1
  local key=$2
  local value=$3
  local firefox_dirs="/usr/lib/firefox /usr/lib64/firefox /usr/local/lib/firefox /usr/local/lib64/firefox"
  local firefox_pref="/defaults/pref"
  local firefox_preferences="/defaults/preferences"

  # Check sanity of input
  if [ $# -lt "3" ]
  then
        echo "Usage: firefox_js_setting 'config_javascript_file' 'key_to_search' 'new_value'"
        echo
        echo "Aborting."
        exit 1
  fi

  # Check the possible Firefox install directories
  for firefox_dir in ${firefox_dirs}; do
    # If the Firefox directory exists, then Firefox is installed
    if [ -d "${firefox_dir}" ]; then
      # Different versions of Firefox have different preferences directories, check for them and set the right one
      if [ -d "${firefox_dir}/${firefox_pref}" ] ; then
        local firefox_pref_dir="${firefox_dir}/${firefox_pref}"
      elif [ -d "${firefox_dir}/${firefox_preferences}" ] ; then
        local firefox_pref_dir="${firefox_dir}/${firefox_preferences}"
      else
        mkdir -m 755 -p "${firefox_dir}/${firefox_preferences}"
        local firefox_pref_dir="${firefox_dir}/${firefox_preferences}"
      fi

      # Make sure the Firefox .js file exists and has the appropriate permissions
      if ! [ -f "${firefox_pref_dir}/${firefox_js}" ] ; then
        touch "${firefox_pref_dir}/${firefox_js}"
        chmod 644 "${firefox_pref_dir}/${firefox_js}"
      fi

      # If the key exists, change it. Otherwise, add it to the config_file.
      if `grep -q "^pref(\"${key}\", " "${firefox_pref_dir}/${firefox_js}"` ; then
        sed -i "s/pref(\"${key}\".*/pref(\"${key}\", ${value});/g" "${firefox_pref_dir}/${firefox_js}"
      else
        echo "pref(\"${key}\", ${value});" &gt;&gt; "${firefox_pref_dir}/${firefox_js}"
      fi
    fi
  done

}
</value>
        </Value>
        <Value id="xccdf_org.ssgproject.content_value_function_package_command" hidden="true" prohibitChanges="true" operator="equals" type="string">
          <title xml:lang="en-US">Remediation function package_command</title>
          <description xml:lang="en-US">Shared bash remediation function. Not intended to be changed by tailoring.</description>
          <value># Function to install or uninstall packages on RHEL and Fedora systems.
#
# Example Call(s):
#
#     package_command install aide
#     package_command remove telnet-server
#
function package_command {

# Load function arguments into local variables
local package_operation=$1
local package=$2

# Check sanity of the input
if [ $# -ne "2" ]
then
  echo "Usage: package_command 'install/uninstall' 'rpm_package_name"
  echo "Aborting."
  exit 1
fi

# If dnf is installed, use dnf; otherwise, use yum
if [ -f "/usr/bin/dnf" ] ; then
  install_util="/usr/bin/dnf"
else
  install_util="/usr/bin/yum"
fi

if [ "$package_operation" != 'remove' ] ; then
  # If the rpm is not installed, install the rpm
  if ! /bin/rpm -q --quiet $package; then
    $install_util -y $package_operation $package
  fi
else
  # If the rpm is installed, uninstall the rpm
  if /bin/rpm -q --quiet $package; then
    $install_util -y $package_operation $package
  fi
fi

}
</value>
        </Value>
      </Group>
      <Group id="xccdf_org.ssgproject.content_group_intro">
        <title xml:lang="en-US">Introduction</title>
        <description xml:lang="en-US">
The purpose of this guidance is to provide security configuration
recommendations and baselines for the Java Runtime Environment application.
Recommended settings for the basic application are provided.
The guide is intended for system administrators. Readers are assumed to
possess basic system administration skills for Unix-like systems, as well
as some familiarity with the product's documentation and administration
conventions. Some instructions within this guide are complex.
All directions should be followed completely and with understanding of
their effects in order to avoid serious adverse effects on the system
and its security.
</description>
        <Group id="xccdf_org.ssgproject.content_group_how-to-use">
          <title xml:lang="en-US">How to Use This Guide</title>
          <description xml:lang="en-US">
Readers should heed the following points when using the guide.
</description>
          <Group id="xccdf_org.ssgproject.content_group_intro-read-sections-completely">
            <title xml:lang="en-US">Read Sections Completely and in Order</title>
            <description xml:lang="en-US">
Each section may build on information and recommendations discussed in
prior sections. Each section should be read and understood completely;
instructions should never be blindly applied. Relevant discussion may
occur after instructions for an action. 
</description>
          </Group>
          <Group id="xccdf_org.ssgproject.content_group_intro-test-non-production">
            <title xml:lang="en-US">Test in Non-Production Environment</title>
            <description xml:lang="en-US">
This guidance should always be tested in a non-production environment
before deployment. This test environment should simulate the setup in
which the system will be deployed as closely as possible.
</description>
          </Group>
          <Group id="xccdf_org.ssgproject.content_group_intro-root-shell-assumed">
            <title xml:lang="en-US">Root Shell Environment Assumed</title>
            <description xml:lang="en-US">
Most of the actions listed in this document are written with the
assumption that they will be executed by the root user running the
<html:code xmlns:html="http://www.w3.org/1999/xhtml">/bin/bash</html:code> shell. Commands preceded with a hash mark (#)
assume that the administrator will execute the commands as root, i.e.
apply the command via <html:code xmlns:html="http://www.w3.org/1999/xhtml">sudo</html:code> whenever possible, or use
<html:code xmlns:html="http://www.w3.org/1999/xhtml">su</html:code> to gain root privileges if <html:code xmlns:html="http://www.w3.org/1999/xhtml">sudo</html:code> cannot be
used. Commands which can be executed as a non-root user are are preceded
by a dollar sign ($) prompt.
</description>
          </Group>
          <Group id="xccdf_org.ssgproject.content_group_intro-formatting-conventions">
            <title xml:lang="en-US">Formatting Conventions</title>
            <description xml:lang="en-US">
Commands intended for shell execution, as well as configuration file text,
are featured in a <html:code xmlns:html="http://www.w3.org/1999/xhtml">monospace font</html:code>. <html:i xmlns:html="http://www.w3.org/1999/xhtml">Italics</html:i> are used
to indicate instances where the system administrator must substitute
the appropriate information into a command or configuration file.
</description>
          </Group>
        </Group>
      </Group>
      <Group id="xccdf_org.ssgproject.content_group_java">
        <title xml:lang="en-US">Java</title>
        <description xml:lang="en-US">
Java is a general-purpose computer programming language. It is intended to
let application developers "write once, run anywhere." Java applications are
typically compiled to bytecode that can run on any Java virtual machine (JVM)
regardless of computer architecture. As such, the Java runtime environment (JRE)
is required to be installed so that Java applications can run. This section
provides settings for configuring Java policies to meet compliance
settings for Java running on Red Hat Enterprise Linux systems.
<html:br xmlns:html="http://www.w3.org/1999/xhtml"/><html:br xmlns:html="http://www.w3.org/1999/xhtml"/>
<html:ul xmlns:html="http://www.w3.org/1999/xhtml">Refer to <html:li><html:a href="https://docs.oracle.com/javase/6/docs/technotes/guides/deployment/deployment-guide/properties.html">https://docs.oracle.com/javase/6/docs/technotes/guides/deployment/deployment-guide/properties.html</html:a></html:li>
for a list of currently supported Java version 6 settings.</html:ul>
<html:ul xmlns:html="http://www.w3.org/1999/xhtml">Refer to <html:li><html:a href="https://docs.oracle.com/javase/7/docs/technotes/guides/jweb/jcp/properties.html">https://docs.oracle.com/javase/7/docs/technotes/guides/jweb/jcp/properties.html</html:a></html:li>
for a list of currently supported Java version 7 settings.</html:ul>
<html:ul xmlns:html="http://www.w3.org/1999/xhtml">Refer to <html:li><html:a href="https://docs.oracle.com/javase/8/docs/technotes/guides/jweb/jcp/properties.html">https://docs.oracle.com/javase/8/docs/technotes/guides/jweb/jcp/properties.html</html:a></html:li>
for a list of currently supported Java version 8 settings.</html:ul>
</description>
        <Group id="xccdf_org.ssgproject.content_group_java_jre_deployment_config_configured">
          <title xml:lang="en-US">Configure the deployment.config File</title>
          <description xml:lang="en-US">
The <html:code xmlns:html="http://www.w3.org/1999/xhtml">deployment.config</html:code> file if used for specifying the System-level
<html:code xmlns:html="http://www.w3.org/1999/xhtml">deployment.properties</html:code> file. The System-level configuration for Java is
configured in <html:code xmlns:html="http://www.w3.org/1999/xhtml">/etc/.java/deployment</html:code>. By default, no <html:code xmlns:html="http://www.w3.org/1999/xhtml">deployment.config</html:code>
file exists. To ensure that the Java <html:code xmlns:html="http://www.w3.org/1999/xhtml">/etc/.java/deployment/deployment.config</html:code> file
is configured correctly, <html:code xmlns:html="http://www.w3.org/1999/xhtml">deployment.system.config</html:code> and
<html:code xmlns:html="http://www.w3.org/1999/xhtml">deployment.system.config.mandatory</html:code> need to be set correctly.
</description>
          <reference href="http://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-53r4.pdf">DCBP-1</reference>
          <reference href="http://iase.disa.mil/stigs/cci/Pages/index.aspx"/>
          <Rule id="xccdf_org.ssgproject.content_rule_java_jre_deployment_config_exists" selected="false" severity="medium">
            <title xml:lang="en-US">The Java Configuration File Exists</title>
            <description xml:lang="en-US">
If the Java configuration file does not exist, it can be added by running:
<html:pre xmlns:html="http://www.w3.org/1999/xhtml">$ sudo mkdir -p -m 755 /etc/.java/deployment
$ sudo touch /etc/.java/deployment/deployment.config
$ sudo chmod 644 /etc/.java/deployment/deployment.config</html:pre>
</description>
            <reference href="http://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-53r4.pdf">DCBP-1</reference>
            <reference href="http://iase.disa.mil/stigs/cci/Pages/index.aspx"/>
            <rationale xml:lang="en-US">
The deployment.config file is used for specifying the location and execution of
system-level properties for the Java Runtime Environment. By default no
deployment.config file exists; thus, no system-wide deployment.properties file exists.
Without the deployment.config file, setting particular options for the Java
control panel is impossible.
</rationale>
            <ident system="https://nvd.nist.gov/cce/index.cfm">CCE-</ident>
            <ident system="http://iase.disa.mil/stigs/app-security/app-security/Pages/index.aspx">JRE0070-UX</ident>
            <fix id="java_jre_deployment_config_exists" system="urn:xccdf:fix:script:sh">JAVA_CONFIG="/etc/.java/deployment/deployment.config"
JAVA_DIR="/etc/.java/deployment"

if [ ! -d ${JAVA_DIR} ] ; then
  mkdir -p -m 755 ${JAVA_DIR}
fi

if [ ! -e ${JAVA_CONFIG} ]; then
  touch ${JAVA_CONFIG} &amp;&amp; chmod 644 ${JAVA_CONFIG}
fi

chmod 644 ${JAVA_CONFIG}</fix>
            <check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
              <check-content-ref name="oval:ssg-java_jre_deployment_config_exists:def:1" href="ssg-jre-oval.xml"/>
            </check>
            <check system="http://scap.nist.gov/schema/ocil/2">
              <check-content-ref name="ocil:ssg-java_jre_deployment_config_exists_ocil:questionnaire:1" href="ssg-jre-ocil.xml"/>
            </check>
          </Rule>
          <Rule id="xccdf_org.ssgproject.content_rule_java_jre_deployment_config_properties" selected="false" severity="medium">
            <title xml:lang="en-US">Configure the deployment.properties File Path</title>
            <description xml:lang="en-US">
To ensure that the Java properties file is set in
<html:code xmlns:html="http://www.w3.org/1999/xhtml">/etc/.java/deployment/deployment.config</html:code>, add or modify
<html:code xmlns:html="http://www.w3.org/1999/xhtml">deployment.system.config</html:code> to equal
<html:code xmlns:html="http://www.w3.org/1999/xhtml">file:///etc/.java/deployment/deployment.properties</html:code>.
</description>
            <reference href="http://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-53r4.pdf">DCBP-1</reference>
            <reference href="http://iase.disa.mil/stigs/cci/Pages/index.aspx"/>
            <rationale xml:lang="en-US">
Without a proper path for the properties file, deployment would not be possible.
If the path specified does not lead to a properties file, the value of the
'deployment.system.config.mandatory' key determines how to handle the situation.
If the value of this key is true, JRE will not run if the path to the properties
file is invalid.
</rationale>
            <ident system="https://nvd.nist.gov/cce/index.cfm">CCE-</ident>
            <ident system="http://iase.disa.mil/stigs/app-security/app-security/Pages/index.aspx">JRE0060-UX</ident>
            <fix id="java_jre_deployment_config_properties" system="urn:xccdf:fix:script:sh">JAVA_CONFIG="/etc/.java/deployment/deployment.config"
JAVA_PROPERTIES="/etc/.java/deployment/deployment.properties"

grep -q "^deployment.system.config=file://${JAVA_CONFIG}$" ${JAVA_CONFIG} &amp;&amp; \
sed -i "s;deployment.system.config=.*;deployment.system.config=file:\/\/${JAVA_PROPERTIES};g" ${JAVA_CONFIG}
if ! [ $? -eq 0 ] ; then
  echo "deployment.system.config=file://${JAVA_PROPERTIES}" &gt;&gt; ${JAVA_CONFIG}
fi
</fix>
            <check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
              <check-content-ref name="oval:ssg-java_jre_deployment_config_properties:def:1" href="ssg-jre-oval.xml"/>
            </check>
            <check system="http://scap.nist.gov/schema/ocil/2">
              <check-content-ref name="ocil:ssg-java_jre_deployment_config_properties_ocil:questionnaire:1" href="ssg-jre-ocil.xml"/>
            </check>
          </Rule>
          <Rule id="xccdf_org.ssgproject.content_rule_java_jre_deployment_config_mandatory" selected="false" severity="medium">
            <title xml:lang="en-US">Configure The Java Deployment Mandatory Setting</title>
            <description xml:lang="en-US">
To configure the Java mandatory deployment setting, add or modify
<html:code xmlns:html="http://www.w3.org/1999/xhtml">deployment.system.config.mandatory</html:code> to equal <html:code xmlns:html="http://www.w3.org/1999/xhtml">false</html:code>
in <html:code xmlns:html="http://www.w3.org/1999/xhtml">/etc/.java/deployment/deployment.config</html:code>.
</description>
            <reference href="http://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-53r4.pdf">DCBP-1</reference>
            <reference href="http://iase.disa.mil/stigs/cci/Pages/index.aspx"/>
            <rationale xml:lang="en-US">
Without a proper path for the properties file, deployment would not be possible.
If the path specified does not lead to a properties file, the value of the
'deployment.system.config.mandatory' key determines how to handle the situation.
If the value of this key is true, JRE will not run if the path to the properties
file is invalid.
</rationale>
            <ident system="https://nvd.nist.gov/cce/index.cfm">CCE-</ident>
            <ident system="http://iase.disa.mil/stigs/app-security/app-security/Pages/index.aspx">JRE0060-UX</ident>
            <fix id="java_jre_deployment_config_mandatory" system="urn:xccdf:fix:script:sh">JAVA_CONFIG="/etc/.java/deployment/deployment.config"

grep -q "^deployment.system.config.mandatory=false$" ${JAVA_CONFIG} &amp;&amp; \
sed -i "s/deployment.system.config.mandatory=.*/deployment.system.config.mandatory=false/g" ${JAVA_CONFIG}
if ! [ $? -eq 0 ] ; then
  echo "deployment.system.config.mandatory=false" &gt;&gt; ${JAVA_CONFIG}
fi
</fix>
            <check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
              <check-content-ref name="oval:ssg-java_jre_deployment_config_mandatory:def:1" href="ssg-jre-oval.xml"/>
            </check>
            <check system="http://scap.nist.gov/schema/ocil/2">
              <check-content-ref name="ocil:ssg-java_jre_deployment_config_mandatory_ocil:questionnaire:1" href="ssg-jre-ocil.xml"/>
            </check>
          </Rule>
        </Group>
        <Rule id="xccdf_org.ssgproject.content_rule_java_jre_deployment_properties_exists" selected="false" severity="medium">
          <title xml:lang="en-US">The Java Properties File Exists</title>
          <description xml:lang="en-US">
If the Java properties file does not exist, it can be added by running:
<html:pre xmlns:html="http://www.w3.org/1999/xhtml">$ sudo mkdir -p -m 755 /etc/.java/deployment
$ sudo touch /etc/.java/deployment/deployment.properties
$ sudo chmod 644 /etc/.java/deployment/deployment.properties</html:pre>
</description>
          <reference href="http://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-53r4.pdf">DCBP-1</reference>
          <reference href="http://iase.disa.mil/stigs/cci/Pages/index.aspx"/>
          <rationale xml:lang="en-US">
Each option in the Java control panel is represented by property keys.
These keys adjust the options in the Java control panel based on the value
assigned to that key. By default no deployment.properties file exists; thus,
no system-wide exists. Without the deployment.properties file, setting particular
options for the Java control panel is impossible.
</rationale>
          <ident system="https://nvd.nist.gov/cce/index.cfm">CCE-</ident>
          <ident system="http://iase.disa.mil/stigs/app-security/app-security/Pages/index.aspx">JRE0080-UX</ident>
          <fix id="java_jre_deployment_properties_exists" system="urn:xccdf:fix:script:sh">JAVA_PROPERTIES="/etc/.java/deployment/deployment.properties"
JAVA_DIR="/etc/.java/deployment"

if [ ! -d ${JAVA_DIR} ] ; then
  mkdir -p -m 755 ${JAVA_DIR}
fi

if [ ! -e ${JAVA_PROPERTIES} ]; then
  touch ${JAVA_PROPERTIES} &amp;&amp; chmod 644 ${JAVA_PROPERTIES}
fi

chmod 644 ${JAVA_PROPERTIES}
</fix>
          <check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
            <check-content-ref name="oval:ssg-java_jre_deployment_properties_exists:def:1" href="ssg-jre-oval.xml"/>
          </check>
          <check system="http://scap.nist.gov/schema/ocil/2">
            <check-content-ref name="ocil:ssg-java_jre_deployment_properties_exists_ocil:questionnaire:1" href="ssg-jre-ocil.xml"/>
          </check>
        </Rule>
        <Rule id="xccdf_org.ssgproject.content_rule_java_jre_untrusted_sources" selected="false" severity="medium">
          <title xml:lang="en-US">Disable Java Execution From Untrusted Sources</title>
          <description xml:lang="en-US">
To ensure that Java cannot execute from untrusted sources, set
<html:code xmlns:html="http://www.w3.org/1999/xhtml">deployment.security.askgrantdialog.notinca</html:code> to equal <html:code xmlns:html="http://www.w3.org/1999/xhtml">false</html:code>
in <html:code xmlns:html="http://www.w3.org/1999/xhtml">/etc/.java/deployment/deployment.properties</html:code>.
</description>
          <reference href="http://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-53r4.pdf">DCBP-1</reference>
          <reference href="http://iase.disa.mil/stigs/cci/Pages/index.aspx"/>
          <rationale xml:lang="en-US">
Permitting execution of signed Java applets from un-trusted sources
may result in acquiring malware, and risks system modification, invasion of
privacy, or denial of service.
</rationale>
          <ident system="https://nvd.nist.gov/cce/index.cfm">CCE-</ident>
          <ident system="http://iase.disa.mil/stigs/app-security/app-security/Pages/index.aspx">JRE0001-UX</ident>
          <fix id="java_jre_untrusted_sources" system="urn:xccdf:fix:script:sh">JAVA_PROPERTIES="/etc/.java/deployment/deployment.properties"

grep -q "^deployment.security.askgrantdialog.notinca=false$" ${JAVA_PROPERTIES} &amp;&amp; \
sed -i "s/deployment.security.askgrantdialog.notinca=.*/deployment.security.askgrantdialog.notinca=false/g" ${JAVA_PROPERTIES}
if ! [ $? -eq 0 ] ; then
  echo "deployment.security.askgrantdialog.notinca=false" &gt;&gt; ${JAVA_PROPERTIES}
fi</fix>
          <check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
            <check-content-ref name="oval:ssg-java_jre_untrusted_sources:def:1" href="ssg-jre-oval.xml"/>
          </check>
          <check system="http://scap.nist.gov/schema/ocil/2">
            <check-content-ref name="ocil:ssg-java_jre_untrusted_sources_ocil:questionnaire:1" href="ssg-jre-ocil.xml"/>
          </check>
        </Rule>
        <Rule id="xccdf_org.ssgproject.content_rule_java_jre_untrusted_sources_locked" selected="false" severity="medium">
          <title xml:lang="en-US">Disable User Access to Untrusted Sources Settings</title>
          <description xml:lang="en-US">
To ensure that users cannot change the untrusted sources settings,
add <html:code xmlns:html="http://www.w3.org/1999/xhtml">deployment.security.askgrantdialog.notinca.locked</html:code> to
<html:code xmlns:html="http://www.w3.org/1999/xhtml">/etc/.java/deployment/deployment.properties</html:code>.
</description>
          <reference href="http://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-53r4.pdf">DCBP-1</reference>
          <reference href="http://iase.disa.mil/stigs/cci/Pages/index.aspx"/>
          <rationale xml:lang="en-US">
Permitting execution of signed Java applets from un-trusted sources may
result in malware running on the system, and risks system modification,
invasion of privacy, or denial of service. As such, ensuring users cannot
change the permission settings which control the execution of signed Java
applets contributes to a more consistent security profile.
</rationale>
          <ident system="https://nvd.nist.gov/cce/index.cfm">CCE-</ident>
          <ident system="http://iase.disa.mil/stigs/app-security/app-security/Pages/index.aspx">JRE0010-UX</ident>
          <fix id="java_jre_untrusted_sources_locked" system="urn:xccdf:fix:script:sh">JAVA_PROPERTIES="/etc/.java/deployment/deployment.properties"

grep -q "^deployment.security.askgrantdialog.notinca.locked$" ${JAVA_PROPERTIES} &amp;&amp; \
sed -i "s/deployment.security.askgrantdialog.notinca\..*/deployment.security.askgrantdialog.notinca.locked/g" ${JAVA_PROPERTIES}
if ! [ $? -eq 0 ] ; then
  echo "deployment.security.askgrantdialog.notinca.locked" &gt;&gt; ${JAVA_PROPERTIES}
fi
</fix>
          <check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
            <check-content-ref name="oval:ssg-java_jre_untrusted_sources_locked:def:1" href="ssg-jre-oval.xml"/>
          </check>
          <check system="http://scap.nist.gov/schema/ocil/2">
            <check-content-ref name="ocil:ssg-java_jre_untrusted_sources_locked_ocil:questionnaire:1" href="ssg-jre-ocil.xml"/>
          </check>
        </Rule>
        <Rule id="xccdf_org.ssgproject.content_rule_java_jre_validation_crl" selected="false" severity="medium">
          <title xml:lang="en-US">Enable Revocation Checks for Publisher Certificates</title>
          <description xml:lang="en-US">
To ensure that certificate revocation checks are enabled, set
<html:code xmlns:html="http://www.w3.org/1999/xhtml">deployment.security.validation.crl</html:code> to equal <html:code xmlns:html="http://www.w3.org/1999/xhtml">true</html:code>
in <html:code xmlns:html="http://www.w3.org/1999/xhtml">/etc/.java/deployment/deployment.properties</html:code>.
</description>
          <reference href="http://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-53r4.pdf">DCBP-1</reference>
          <reference href="http://iase.disa.mil/stigs/cci/Pages/index.aspx"/>
          <rationale xml:lang="en-US">
Certificates may be revoked due to improper issuance, compromise of the certificate,
and failure to adhere to policy. Therefore, any certificate found on a CRL
should not be trusted. Permitting execution of an applet published with a
revoked certificate may result in spoofing, malware, system modification,
invasion of privacy, and denial of service.
</rationale>
          <ident system="https://nvd.nist.gov/cce/index.cfm">CCE-</ident>
          <ident system="http://iase.disa.mil/stigs/app-security/app-security/Pages/index.aspx">JRE0020-UX</ident>
          <fix id="java_jre_validation_crl" system="urn:xccdf:fix:script:sh">JAVA_PROPERTIES="/etc/.java/deployment/deployment.properties"

grep -q "^deployment.security.validation.crl=true$" ${JAVA_PROPERTIES} &amp;&amp; \
sed -i "s/deployment.security.validation.crl=.*/deployment.security.validation.crl=true/g" ${JAVA_PROPERTIES}
if ! [ $? -eq 0 ] ; then
  echo "deployment.security.validation.crl=true" &gt;&gt; ${JAVA_PROPERTIES}
fi</fix>
          <check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
            <check-content-ref name="oval:ssg-java_jre_validation_crl:def:1" href="ssg-jre-oval.xml"/>
          </check>
          <check system="http://scap.nist.gov/schema/ocil/2">
            <check-content-ref name="ocil:ssg-java_jre_validation_crl_ocil:questionnaire:1" href="ssg-jre-ocil.xml"/>
          </check>
        </Rule>
        <Rule id="xccdf_org.ssgproject.content_rule_java_jre_validation_crl_locked" selected="false" severity="medium">
          <title xml:lang="en-US">Disable User Access to Revocation Check Settings</title>
          <description xml:lang="en-US">
To ensure that users cannot change certificate revocation check settings,
add <html:code xmlns:html="http://www.w3.org/1999/xhtml">deployment.security.validation.crl.locked</html:code> to
<html:code xmlns:html="http://www.w3.org/1999/xhtml">/etc/.java/deployment/deployment.properties</html:code>.
</description>
          <reference href="http://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-53r4.pdf">DCBP-1</reference>
          <reference href="http://iase.disa.mil/stigs/cci/Pages/index.aspx"/>
          <rationale xml:lang="en-US">
Permitting execution of an applet published with a revoked certificate may
result in spoofing, malware, system modification, invasion of privacy,
and denial of service. As such, ensuring users cannot change settings
contributes to a more consistent security profile.
</rationale>
          <ident system="https://nvd.nist.gov/cce/index.cfm">CCE-</ident>
          <ident system="http://iase.disa.mil/stigs/app-security/app-security/Pages/index.aspx">JRE0030-UX</ident>
          <fix id="java_jre_validation_crl_locked" system="urn:xccdf:fix:script:sh">JAVA_PROPERTIES="/etc/.java/deployment/deployment.properties"

grep -q "^deployment.security.validation.crl.locked$" ${JAVA_PROPERTIES} &amp;&amp; \
sed -i "s/deployment.security.validation.crl\..*/deployment.security.validation.crl.locked/g" ${JAVA_PROPERTIES}
if ! [ $? -eq 0 ] ; then
  echo "deployment.security.validation.crl.locked" &gt;&gt; ${JAVA_PROPERTIES}
fi
</fix>
          <check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
            <check-content-ref name="oval:ssg-java_jre_validation_crl_locked:def:1" href="ssg-jre-oval.xml"/>
          </check>
          <check system="http://scap.nist.gov/schema/ocil/2">
            <check-content-ref name="ocil:ssg-java_jre_validation_crl_locked_ocil:questionnaire:1" href="ssg-jre-ocil.xml"/>
          </check>
        </Rule>
        <Rule id="xccdf_org.ssgproject.content_rule_java_jre_validation_ocsp" selected="false" severity="medium">
          <title xml:lang="en-US">Enable Online Certificate Validation</title>
          <description xml:lang="en-US">
To ensure that online certificate verification is enabled, set
<html:code xmlns:html="http://www.w3.org/1999/xhtml">deployment.security.validation.ocsp</html:code> to equal <html:code xmlns:html="http://www.w3.org/1999/xhtml">true</html:code>
in <html:code xmlns:html="http://www.w3.org/1999/xhtml">/etc/.java/deployment/deployment.properties</html:code>.
</description>
          <reference href="http://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-53r4.pdf">DCBP-1</reference>
          <reference href="http://iase.disa.mil/stigs/cci/Pages/index.aspx"/>
          <rationale xml:lang="en-US">
Online certificate validation provides a greater degree of validation of certificates
when running a signed Java applet. Permitting execution of an applet with an invalid
certificate may result in malware execution , system modification, invasion of privacy,
and denial of service.
</rationale>
          <ident system="https://nvd.nist.gov/cce/index.cfm">CCE-</ident>
          <ident system="http://iase.disa.mil/stigs/app-security/app-security/Pages/index.aspx">JRE0040-UX</ident>
          <fix id="java_jre_validation_ocsp" system="urn:xccdf:fix:script:sh">JAVA_PROPERTIES="/etc/.java/deployment/deployment.properties"

grep -q "^deployment.security.validation.ocsp=true$" ${JAVA_PROPERTIES} &amp;&amp; \
sed -i "s/deployment.security.validation.ocsp=.*/deployment.security.validation.ocsp=true/g" ${JAVA_PROPERTIES}
if ! [ $? -eq 0 ] ; then
  echo "deployment.security.validation.ocsp=true" &gt;&gt; ${JAVA_PROPERTIES}
fi</fix>
          <check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
            <check-content-ref name="oval:ssg-java_jre_validation_ocsp:def:1" href="ssg-jre-oval.xml"/>
          </check>
          <check system="http://scap.nist.gov/schema/ocil/2">
            <check-content-ref name="ocil:ssg-java_jre_validation_ocsp_ocil:questionnaire:1" href="ssg-jre-ocil.xml"/>
          </check>
        </Rule>
        <Rule id="xccdf_org.ssgproject.content_rule_java_jre_validation_ocsp_locked" selected="false" severity="medium">
          <title xml:lang="en-US">Disable User Access to Online Certificate Validation Settings</title>
          <description xml:lang="en-US">
To ensure that users cannot change the online certificate verification settings,
add <html:code xmlns:html="http://www.w3.org/1999/xhtml">deployment.security.validation.ocsp.locked</html:code> to
<html:code xmlns:html="http://www.w3.org/1999/xhtml">/etc/.java/deployment/deployment.properties</html:code>.
</description>
          <reference href="http://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-53r4.pdf">DCBP-1</reference>
          <reference href="http://iase.disa.mil/stigs/cci/Pages/index.aspx"/>
          <rationale xml:lang="en-US">
Online certificate validation provides a greater degree of validation of certificates
when running a signed Java applet. Permitting execution of an applet with an invalid
certificate may result in malware execution , system modification, invasion of privacy,
and denial of service. As such, ensuring users cannot change settings contributes to
a more consistent security profile.
</rationale>
          <ident system="https://nvd.nist.gov/cce/index.cfm">CCE-</ident>
          <ident system="http://iase.disa.mil/stigs/app-security/app-security/Pages/index.aspx">JRE0050-UX</ident>
          <fix id="java_jre_validation_ocsp_locked" system="urn:xccdf:fix:script:sh">JAVA_PROPERTIES="/etc/.java/deployment/deployment.properties"

grep -q "^deployment.security.validation.ocsp.locked$" ${JAVA_PROPERTIES} &amp;&amp; \
sed -i "s/deployment.security.validation.ocsp\..*/deployment.security.validation.ocsp.locked/g" ${JAVA_PROPERTIES}
if ! [ $? -eq 0 ] ; then
  echo "deployment.security.validation.ocsp.locked" &gt;&gt; ${JAVA_PROPERTIES}
fi
</fix>
          <check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
            <check-content-ref name="oval:ssg-java_jre_validation_ocsp_locked:def:1" href="ssg-jre-oval.xml"/>
          </check>
          <check system="http://scap.nist.gov/schema/ocil/2">
            <check-content-ref name="ocil:ssg-java_jre_validation_ocsp_locked_ocil:questionnaire:1" href="ssg-jre-ocil.xml"/>
          </check>
        </Rule>
        <Rule id="xccdf_org.ssgproject.content_rule_java_jre_updated" selected="false" severity="medium">
          <title xml:lang="en-US">Ensure Java Patches Installed</title>
          <description xml:lang="en-US">
If the system is joined to the Red Hat Network, a Red Hat Satellite Server,
or a yum server, run the following command to install updates:
<html:pre xmlns:html="http://www.w3.org/1999/xhtml">$ sudo yum update</html:pre>
If the system is not configured to use one of these sources, updates (in the form of RPM packages)
can be manually downloaded and installed using <html:code xmlns:html="http://www.w3.org/1999/xhtml">rpm</html:code>.
</description>
          <reference href="http://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-53r4.pdf">DCBP-1</reference>
          <reference href="http://iase.disa.mil/stigs/cci/Pages/index.aspx"/>
          <rationale xml:lang="en-US">
Running an older version of the JRE can introduce security
vulnerabilities to the system.
</rationale>
          <ident system="https://nvd.nist.gov/cce/index.cfm">CCE-</ident>
          <ident system="http://iase.disa.mil/stigs/app-security/app-security/Pages/index.aspx">JRE0090-UX</ident>
          <check system="http://scap.nist.gov/schema/ocil/2">
            <check-content-ref name="ocil:ssg-java_jre_updated_ocil:questionnaire:1" href="ssg-jre-ocil.xml"/>
          </check>
        </Rule>
      </Group>
    </Benchmark>
  </ds:component>
  <ds:component id="scap_org.open-scap_comp_ssg-jre-cpe-oval.xml" timestamp="2017-06-29T18:43:50">
    <ns0:oval_definitions xmlns:ns0="http://oval.mitre.org/XMLSchema/oval-definitions-5" xmlns:ns2="http://oval.mitre.org/XMLSchema/oval-common-5" xmlns:ns3="http://oval.mitre.org/XMLSchema/oval-definitions-5#linux" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://oval.mitre.org/XMLSchema/oval-common-5 oval-common-schema.xsd         http://oval.mitre.org/XMLSchema/oval-definitions-5 oval-definitions-schema.xsd         http://oval.mitre.org/XMLSchema/oval-definitions-5#independent independent-definitions-schema.xsd         http://oval.mitre.org/XMLSchema/oval-definitions-5#unix unix-definitions-schema.xsd         http://oval.mitre.org/XMLSchema/oval-definitions-5#linux linux-definitions-schema.xsd">
      <ns0:generator>
        <ns2:product_name>python</ns2:product_name>
        <ns2:product_version>2.7.13</ns2:product_version>
        <ns2:schema_version>5.11</ns2:schema_version>
        <ns2:timestamp>2017-06-29T18:43:32</ns2:timestamp>
      </ns0:generator>
      <ns0:definitions>
        <ns0:definition class="inventory" id="oval:ssg-installed_app_is_java:def:1" version="1">
          <ns0:metadata>
            <ns0:title>Java Runtime Environment</ns0:title>
            <ns0:affected family="unix">
              <ns0:product>Java Runtime Environment (JRE)</ns0:product>
            </ns0:affected>
            <ns0:reference ref_id="installed_app_is_java" source="CPE"/>
            <ns0:description>The application installed on the system is Java.</ns0:description>
          </ns0:metadata>
          <ns0:criteria operator="OR">
            <ns0:criterion comment="Oracle Java is installed" test_ref="oval:ssg-test_oracle_java:tst:1"/>
            <ns0:criterion comment="Oracle Java from Red Hat" test_ref="oval:ssg-test_oracle_java_rhel:tst:1"/>
            <ns0:criterion comment="IBM Java is installed" test_ref="oval:ssg-test_ibm_java:tst:1"/>
            <ns0:criterion comment="IBM Java from Red Hat" test_ref="oval:ssg-test_ibm_java_rhel:tst:1"/>
            <ns0:criterion comment="Sun Java from Red Hat" test_ref="oval:ssg-test_sun_java_rhel:tst:1"/>
            <ns0:criterion comment="OpenJDK is installed" test_ref="oval:ssg-test_openjdk_java:tst:1"/>
          </ns0:criteria>
        </ns0:definition>
      </ns0:definitions>
      <ns0:tests>
        <ns3:rpminfo_test check="all" check_existence="at_least_one_exists" comment="Oracle JRE is installed" id="oval:ssg-test_oracle_java:tst:1" version="1">
          <ns3:object object_ref="oval:ssg-obj_oracle_java:obj:1"/>
        </ns3:rpminfo_test>
        <ns3:rpminfo_test check="all" check_existence="at_least_one_exists" comment="Oracle JRE from Red Hat is installed" id="oval:ssg-test_oracle_java_rhel:tst:1" version="1">
          <ns3:object object_ref="oval:ssg-obj_oracle_java_rhel:obj:1"/>
        </ns3:rpminfo_test>
        <ns3:rpminfo_test check="all" check_existence="at_least_one_exists" comment="IBM JRE is installed" id="oval:ssg-test_ibm_java:tst:1" version="1">
          <ns3:object object_ref="oval:ssg-obj_ibm_java:obj:1"/>
          <ns3:state state_ref="oval:ssg-state_ibm_java:ste:1"/>
        </ns3:rpminfo_test>
        <ns3:rpminfo_test check="all" check_existence="at_least_one_exists" comment="IBM JRE from Red Hat is installed" id="oval:ssg-test_ibm_java_rhel:tst:1" version="1">
          <ns3:object object_ref="oval:ssg-obj_ibm_java_rhel:obj:1"/>
          <ns3:state state_ref="oval:ssg-state_ibm_java_rhel:ste:1"/>
        </ns3:rpminfo_test>
        <ns3:rpminfo_test check="all" check_existence="at_least_one_exists" comment="Sun JRE from Red Hat is installed" id="oval:ssg-test_sun_java_rhel:tst:1" version="1">
          <ns3:object object_ref="oval:ssg-obj_sun_java_rhel:obj:1"/>
        </ns3:rpminfo_test>
        <ns3:rpminfo_test check="all" check_existence="at_least_one_exists" comment="Red Hat OpenJDK is installed" id="oval:ssg-test_openjdk_java:tst:1" version="1">
          <ns3:object object_ref="oval:ssg-obj_openjdk_java:obj:1"/>
        </ns3:rpminfo_test>
      </ns0:tests>
      <ns0:objects>
        <ns3:rpminfo_object id="oval:ssg-obj_oracle_java:obj:1" version="1">
          <ns3:name datatype="string" operation="pattern match">^jre.*$</ns3:name>
        </ns3:rpminfo_object>
        <ns3:rpminfo_object id="oval:ssg-obj_oracle_java_rhel:obj:1" version="1">
          <ns3:name datatype="string" operation="pattern match">^java.*oracle.*$</ns3:name>
        </ns3:rpminfo_object>
        <ns3:rpminfo_object id="oval:ssg-obj_ibm_java:obj:1" version="1">
          <ns3:name datatype="string" operation="pattern match">^ibm-java.*$</ns3:name>
        </ns3:rpminfo_object>
        <ns3:rpminfo_object id="oval:ssg-obj_ibm_java_rhel:obj:1" version="1">
          <ns3:name datatype="string" operation="pattern match">^java.*ibm.*$</ns3:name>
        </ns3:rpminfo_object>
        <ns3:rpminfo_object id="oval:ssg-obj_sun_java_rhel:obj:1" version="1">
          <ns3:name datatype="string" operation="pattern match">^java.*sun.*$</ns3:name>
        </ns3:rpminfo_object>
        <ns3:rpminfo_object id="oval:ssg-obj_openjdk_java:obj:1" version="1">
          <ns3:name datatype="string" operation="pattern match">^java.*openjdk.*$</ns3:name>
        </ns3:rpminfo_object>
      </ns0:objects>
      <ns0:states>
        <ns3:rpminfo_state id="oval:ssg-state_ibm_java:ste:1" version="1">
          <ns3:evr datatype="evr_string" operation="greater than or equal">.*1.6.0.*</ns3:evr>
        </ns3:rpminfo_state>
        <ns3:rpminfo_state id="oval:ssg-state_ibm_java_rhel:ste:1" version="1">
          <ns3:evr datatype="evr_string" operation="greater than or equal">.*1.6.0.*</ns3:evr>
        </ns3:rpminfo_state>
      </ns0:states>
    </ns0:oval_definitions>
  </ds:component>
  <ds:component id="scap_org.open-scap_comp_ssg-jre-cpe-dictionary.xml" timestamp="2017-06-29T18:43:50">
    <ns0:cpe-list xmlns:ns0="http://cpe.mitre.org/dictionary/2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://cpe.mitre.org/dictionary/2.0 http://cpe.mitre.org/files/cpe-dictionary_2.1.xsd">
      <ns0:cpe-item name="cpe:/a:oracle:jre">
        <ns0:title xml:lang="en-us">Oracle's Java Runtime Environment</ns0:title>
        <ns0:check href="ssg-jre-cpe-oval.xml" system="http://oval.mitre.org/XMLSchema/oval-definitions-5">oval:ssg-installed_app_is_java:def:1</ns0:check>
      </ns0:cpe-item>
      <ns0:cpe-item name="cpe:/a:ibm:jre">
        <ns0:title xml:lang="en-us">IBM Java Runtime Environment</ns0:title>
        <ns0:check href="ssg-jre-cpe-oval.xml" system="http://oval.mitre.org/XMLSchema/oval-definitions-5">oval:ssg-installed_app_is_java:def:1</ns0:check>
      </ns0:cpe-item>
      <ns0:cpe-item name="cpe:/a:redhat:openjdk">
        <ns0:title xml:lang="en-us">OpenJDK Java Runtime Environment</ns0:title>
        <ns0:check href="ssg-jre-cpe-oval.xml" system="http://oval.mitre.org/XMLSchema/oval-definitions-5">oval:ssg-installed_app_is_java:def:1</ns0:check>
      </ns0:cpe-item>
      <ns0:cpe-item name="cpe:/a:sun:jre">
        <ns0:title xml:lang="en-us">Sun Java Runtime Environment</ns0:title>
        <ns0:check href="ssg-jre-cpe-oval.xml" system="http://oval.mitre.org/XMLSchema/oval-definitions-5">oval:ssg-installed_app_is_java:def:1</ns0:check>
      </ns0:cpe-item>
    </ns0:cpe-list>
  </ds:component>
</ds:data-stream-collection>
